#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyOrgs
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StudentOrgs")]
	public partial class MyOrgsDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserOrg(UserOrg instance);
    partial void UpdateUserOrg(UserOrg instance);
    partial void DeleteUserOrg(UserOrg instance);
    partial void InsertStudentRoster(StudentRoster instance);
    partial void UpdateStudentRoster(StudentRoster instance);
    partial void DeleteStudentRoster(StudentRoster instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertServiceProject(ServiceProject instance);
    partial void UpdateServiceProject(ServiceProject instance);
    partial void DeleteServiceProject(ServiceProject instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertOrgStatus(OrgStatus instance);
    partial void UpdateOrgStatus(OrgStatus instance);
    partial void DeleteOrgStatus(OrgStatus instance);
    partial void InsertOrgEvent(OrgEvent instance);
    partial void UpdateOrgEvent(OrgEvent instance);
    partial void DeleteOrgEvent(OrgEvent instance);
    partial void InsertOrgDoc(OrgDoc instance);
    partial void UpdateOrgDoc(OrgDoc instance);
    partial void DeleteOrgDoc(OrgDoc instance);
    partial void InsertOrgCategory(OrgCategory instance);
    partial void UpdateOrgCategory(OrgCategory instance);
    partial void DeleteOrgCategory(OrgCategory instance);
    partial void InsertOrgAdvisor(OrgAdvisor instance);
    partial void UpdateOrgAdvisor(OrgAdvisor instance);
    partial void DeleteOrgAdvisor(OrgAdvisor instance);
    partial void InsertMemberType(MemberType instance);
    partial void UpdateMemberType(MemberType instance);
    partial void DeleteMemberType(MemberType instance);
    partial void InsertAdvisor(Advisor instance);
    partial void UpdateAdvisor(Advisor instance);
    partial void DeleteAdvisor(Advisor instance);
    partial void InsertOrganization(Organization instance);
    partial void UpdateOrganization(Organization instance);
    partial void DeleteOrganization(Organization instance);
    #endregion
		
		public MyOrgsDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["StudentOrgsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyOrgsDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyOrgsDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyOrgsDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyOrgsDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserOrg> UserOrgs
		{
			get
			{
				return this.GetTable<UserOrg>();
			}
		}
		
		public System.Data.Linq.Table<Term> Terms
		{
			get
			{
				return this.GetTable<Term>();
			}
		}
		
		public System.Data.Linq.Table<StudentRoster> StudentRosters
		{
			get
			{
				return this.GetTable<StudentRoster>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<ServiceProjectComment> ServiceProjectComments
		{
			get
			{
				return this.GetTable<ServiceProjectComment>();
			}
		}
		
		public System.Data.Linq.Table<ServiceProject> ServiceProjects
		{
			get
			{
				return this.GetTable<ServiceProject>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<OrgStatus> OrgStatus
		{
			get
			{
				return this.GetTable<OrgStatus>();
			}
		}
		
		public System.Data.Linq.Table<OrgEvent> OrgEvents
		{
			get
			{
				return this.GetTable<OrgEvent>();
			}
		}
		
		public System.Data.Linq.Table<OrgDoc> OrgDocs
		{
			get
			{
				return this.GetTable<OrgDoc>();
			}
		}
		
		public System.Data.Linq.Table<OrgComment> OrgComments
		{
			get
			{
				return this.GetTable<OrgComment>();
			}
		}
		
		public System.Data.Linq.Table<OrgCategory> OrgCategories
		{
			get
			{
				return this.GetTable<OrgCategory>();
			}
		}
		
		public System.Data.Linq.Table<OrgAdvisor> OrgAdvisors
		{
			get
			{
				return this.GetTable<OrgAdvisor>();
			}
		}
		
		public System.Data.Linq.Table<MemberType> MemberTypes
		{
			get
			{
				return this.GetTable<MemberType>();
			}
		}
		
		public System.Data.Linq.Table<EventComment> EventComments
		{
			get
			{
				return this.GetTable<EventComment>();
			}
		}
		
		public System.Data.Linq.Table<Advisor> Advisors
		{
			get
			{
				return this.GetTable<Advisor>();
			}
		}
		
		public System.Data.Linq.Table<Organization> Organizations
		{
			get
			{
				return this.GetTable<Organization>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetMyOrgsEventList")]
		public ISingleResult<sp_GetMyOrgsEventListResult> sp_GetMyOrgsEventList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="VarChar(20)")] string orgID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Incl_Old", DbType="VarChar(1)")] string incl_Old)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID, incl_Old);
			return ((ISingleResult<sp_GetMyOrgsEventListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetMyOrgsReportRoster")]
		public ISingleResult<sp_GetMyOrgsReportRosterResult> sp_GetMyOrgsReportRoster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="VarChar(20)")] string orgID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(2)")] string cl_filter)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID, cl_filter);
			return ((ISingleResult<sp_GetMyOrgsReportRosterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetUserOrgsByID")]
		public ISingleResult<sp_GetUserOrgsByIDResult> sp_GetUserOrgsByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="VarChar(20)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<sp_GetUserOrgsByIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateStudentRosterRow")]
		public int sp_UpdateStudentRosterRow([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_ID", DbType="Int")] System.Nullable<int> student_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Organization_ID", DbType="Int")] System.Nullable<int> organization_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), student_ID, organization_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetRoleOfUser")]
		public int sp_GetRoleOfUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_ID", DbType="VarChar(15)")] string user_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(15)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleName", DbType="VarChar(15)")] ref string roleName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] ref System.Nullable<bool> isActive)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_ID, password, roleName, isActive);
			roleName = ((string)(result.GetParameterValue(2)));
			isActive = ((System.Nullable<bool>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_NewStudentRosterRow")]
		public int sp_NewStudentRosterRow([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Organization_ID", DbType="Int")] System.Nullable<int> organization_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_ID", DbType="Int")] System.Nullable<int> student_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), organization_ID, student_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetStudentByName")]
		public ISingleResult<sp_GetStudentByNameResult> sp_GetStudentByName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="VarChar(20)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="VarChar(20)")] string firstName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastName, firstName);
			return ((ISingleResult<sp_GetStudentByNameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateMyOrgs_Organization")]
		public int sp_UpdateMyOrgs_Organization([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Organization_ID", DbType="Int")] System.Nullable<int> organization_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UpdateMode", DbType="VarChar(1)")] string updateMode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(MAX)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MeetingDay", DbType="VarChar(20)")] string meetingDay, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MeetingTime", DbType="VarChar(20)")] string meetingTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MeetingFrequency", DbType="VarChar(150)")] string meetingFrequency, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MeetingBuilding", DbType="VarChar(20)")] string meetingBuilding, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MeetingRoom", DbType="VarChar(20)")] string meetingRoom)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), organization_ID, updateMode, description, meetingDay, meetingTime, meetingFrequency, meetingBuilding, meetingRoom);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateUser")]
		public int sp_UpdateUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="VarChar(20)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="VarChar(20)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Password", DbType="VarChar(20)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserId", DbType="VarChar(20)")] string userId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RoleID", DbType="Int")] System.Nullable<int> roleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="VarChar(15)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(254)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastName, firstName, password, userId, isActive, roleID, phone, email);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetUserByID")]
		public ISingleResult<sp_GetUserByIDResult> sp_GetUserByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="VarChar(20)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((ISingleResult<sp_GetUserByIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateMyOrgEventDetails")]
		public int sp_UpdateMyOrgEventDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Event_ID", DbType="Int")] System.Nullable<int> event_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="VarChar(50)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(MAX)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnOffCampus", DbType="Bit")] System.Nullable<bool> onOffCampus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Location", DbType="VarChar(50)")] string location, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="VarChar(20)")] string date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Time", DbType="VarChar(10)")] string time, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Attendence", DbType="VarChar(10)")] string attendence)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), event_ID, title, description, onOffCampus, location, date, time, attendence);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateMyOrgEventCosts")]
		public int sp_UpdateMyOrgEventCosts([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Event_ID", DbType="Int")] System.Nullable<int> event_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VanRental", DbType="VarChar(10)")] string vanRental, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BusRental", DbType="VarChar(10)")] string busRental, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Dollars", DbType="VarChar(18)")] string dollars, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DollarsByPartner", DbType="VarChar(18)")] string dollarsByPartner)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), event_ID, vanRental, busRental, dollars, dollarsByPartner);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetDrivers")]
		public ISingleResult<sp_GetDriversResult> sp_GetDrivers()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_GetDriversResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetEventDrivers_byEvent")]
		public ISingleResult<sp_GetEventDrivers_byEventResult> sp_GetEventDrivers_byEvent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventID", DbType="Int")] System.Nullable<int> eventID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventID);
			return ((ISingleResult<sp_GetEventDrivers_byEventResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateMyOrgEventDriver")]
		public int sp_UpdateMyOrgEventDriver([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Event_ID", DbType="Int")] System.Nullable<int> event_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Student_ID", DbType="Int")] System.Nullable<int> student_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1)")] string mode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), event_ID, student_ID, mode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateMyOrgEventChecklist")]
		public int sp_UpdateMyOrgEventChecklist([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Event_ID", DbType="Int")] System.Nullable<int> event_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> location, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> marketing, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> catering, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> event_signup, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> activity_waiver, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> cu_night)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), event_ID, location, marketing, catering, event_signup, activity_waiver, cu_night);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetOrgEvent")]
		public ISingleResult<sp_GetOrgEventResult> sp_GetOrgEvent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Event_ID", DbType="Int")] System.Nullable<int> event_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Organization_ID", DbType="Int")] System.Nullable<int> organization_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), event_ID, organization_ID);
			return ((ISingleResult<sp_GetOrgEventResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_NewEventComments")]
		public int sp_NewEventComments([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Event_ID", DbType="Int")] System.Nullable<int> event_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="VarChar(20)")] string date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="Text")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="VarChar(20)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), event_ID, date, text, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetCommentsByEventID")]
		public ISingleResult<sp_GetCommentsByEventIDResult> sp_GetCommentsByEventID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventID", DbType="Int")] System.Nullable<int> eventID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventID);
			return ((ISingleResult<sp_GetCommentsByEventIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteEventComment")]
		public int sp_DeleteEventComment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventComment_ID", DbType="Int")] System.Nullable<int> eventComment_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventComment_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateEventComment")]
		public int sp_UpdateEventComment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EventComment_ID", DbType="Int")] System.Nullable<int> eventComment_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="Text")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), eventComment_ID, text);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_NewMyOrgsEvent")]
		public int sp_NewMyOrgsEvent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Organization_ID", DbType="Int")] System.Nullable<int> organization_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="VarChar(20)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), organization_ID, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateMyOrgServiceDetails")]
		public int sp_UpdateMyOrgServiceDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceProject_ID", DbType="Int")] System.Nullable<int> serviceProject_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Title", DbType="VarChar(150)")] string title, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(MAX)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OnGoing", DbType="Bit")] System.Nullable<bool> onGoing, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Location", DbType="VarChar(50)")] string location, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartDate", DbType="VarChar(20)")] string startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeFrom", DbType="VarChar(10)")] string timeFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TimeTo", DbType="VarChar(10)")] string timeTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceProject_ID, title, description, onGoing, location, startDate, timeFrom, timeTo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_NewMyOrgsServiceProject")]
		public int sp_NewMyOrgsServiceProject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Organization_ID", DbType="Int")] System.Nullable<int> organization_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), organization_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateMyOrgEventPartner")]
		public int sp_UpdateMyOrgEventPartner([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Event_ID", DbType="Int")] System.Nullable<int> event_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrganizationWorkedWith", DbType="VarChar(50)")] string organizationWorkedWith, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactName", DbType="VarChar(50)")] string contactName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactEmail", DbType="VarChar(50)")] string contactEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactPhone", DbType="VarChar(50)")] string contactPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HoursVolunteered", DbType="VarChar(10)")] string hoursVolunteered)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), event_ID, organizationWorkedWith, contactName, contactEmail, contactPhone, hoursVolunteered);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateMyOrgServicePartner")]
		public int sp_UpdateMyOrgServicePartner([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Service_ID", DbType="Int")] System.Nullable<int> service_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommunityPartner", DbType="VarChar(150)")] string communityPartner, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactName", DbType="VarChar(50)")] string contactName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactEmail", DbType="VarChar(50)")] string contactEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactPhone", DbType="VarChar(50)")] string contactPhone)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), service_ID, communityPartner, contactName, contactEmail, contactPhone);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_DeleteServiceComment")]
		public int sp_DeleteServiceComment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceComment_ID", DbType="Int")] System.Nullable<int> serviceComment_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceComment_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateServiceComment")]
		public int sp_UpdateServiceComment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceComment_ID", DbType="Int")] System.Nullable<int> serviceComment_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="Text")] string text)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceComment_ID, text);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_NewServiceProjectComments")]
		public int sp_NewServiceProjectComments([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceProject_ID", DbType="Int")] System.Nullable<int> serviceProject_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="VarChar(20)")] string date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Text", DbType="Text")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="VarChar(20)")] string userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceProject_ID, date, text, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetCommentsByServiceProjectID")]
		public ISingleResult<sp_GetCommentsByServiceProjectIDResult> sp_GetCommentsByServiceProjectID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceProject_ID", DbType="Int")] System.Nullable<int> serviceProject_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceProject_ID);
			return ((ISingleResult<sp_GetCommentsByServiceProjectIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetServiceProject")]
		public ISingleResult<sp_GetServiceProjectResult> sp_GetServiceProject([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ServiceProject_ID", DbType="Int")] System.Nullable<int> serviceProject_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), serviceProject_ID);
			return ((ISingleResult<sp_GetServiceProjectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateMyOrgServiceResults")]
		public int sp_UpdateMyOrgServiceResults([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Service_ID", DbType="Int")] System.Nullable<int> service_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Planned_Volunteers", DbType="Int")] System.Nullable<int> planned_Volunteers, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Planned_Hours", DbType="Int")] System.Nullable<int> planned_Hours, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Planned_Items", DbType="VarChar(250)")] string planned_Items, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Actual_Volunteers", DbType="Int")] System.Nullable<int> actual_Volunteers, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Actual_Hours", DbType="Int")] System.Nullable<int> actual_Hours, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Actual_Items", DbType="VarChar(250)")] string actual_Items)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), service_ID, planned_Volunteers, planned_Hours, planned_Items, actual_Volunteers, actual_Hours, actual_Items);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetMyOrgsServiceList")]
		public ISingleResult<sp_GetMyOrgsServiceListResult> sp_GetMyOrgsServiceList([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="VarChar(20)")] string orgID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Incl_Old", DbType="VarChar(1)")] string incl_Old)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID, incl_Old);
			return ((ISingleResult<sp_GetMyOrgsServiceListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetOrgFiles")]
		public ISingleResult<sp_GetOrgFilesResult> sp_GetOrgFiles([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> org_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), org_ID);
			return ((ISingleResult<sp_GetOrgFilesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_NewOrgFile", IsComposable=true)]
		public object sp_NewOrgFile([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> org_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(250)")] string name_of_file, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string uploaded_by, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary file_contents)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), org_ID, name_of_file, uploaded_by, file_contents).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetMyOrgs_OrgByID")]
		public ISingleResult<sp_GetMyOrgs_OrgByIDResult> sp_GetMyOrgs_OrgByID([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Organization_ID", DbType="Int")] System.Nullable<int> organization_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), organization_ID);
			return ((ISingleResult<sp_GetMyOrgs_OrgByIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetMyOrgsRoster")]
		public ISingleResult<sp_GetMyOrgsRosterResult> sp_GetMyOrgsRoster([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrgID", DbType="Int")] System.Nullable<int> orgID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orgID);
			return ((ISingleResult<sp_GetMyOrgsRosterResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _User_ID;
		
		private string _Password;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private int _Role_ID;
		
		private bool _Is_Active;
		
		private string _Phone;
		
		private string _Email;
		
		private EntitySet<UserOrg> _UserOrgs;
		
		private EntitySet<OrgEvent> _OrgEvents;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(string value);
    partial void OnUser_IDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnRole_IDChanging(int value);
    partial void OnRole_IDChanged();
    partial void OnIs_ActiveChanging(bool value);
    partial void OnIs_ActiveChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public User()
		{
			this._UserOrgs = new EntitySet<UserOrg>(new Action<UserOrg>(this.attach_UserOrgs), new Action<UserOrg>(this.detach_UserOrgs));
			this._OrgEvents = new EntitySet<OrgEvent>(new Action<OrgEvent>(this.attach_OrgEvents), new Action<OrgEvent>(this.detach_OrgEvents));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="Int NOT NULL")]
		public int Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL")]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this.OnIs_ActiveChanging(value);
					this.SendPropertyChanging();
					this._Is_Active = value;
					this.SendPropertyChanged("Is_Active");
					this.OnIs_ActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="Char(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(254)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserOrg", Storage="_UserOrgs", ThisKey="User_ID", OtherKey="User_ID")]
		public EntitySet<UserOrg> UserOrgs
		{
			get
			{
				return this._UserOrgs;
			}
			set
			{
				this._UserOrgs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_OrgEvent", Storage="_OrgEvents", ThisKey="User_ID", OtherKey="CreatedByUser")]
		public EntitySet<OrgEvent> OrgEvents
		{
			get
			{
				return this._OrgEvents;
			}
			set
			{
				this._OrgEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="Role_ID", OtherKey="Role_ID", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Role_ID = value.Role_ID;
					}
					else
					{
						this._Role_ID = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserOrgs(UserOrg entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserOrgs(UserOrg entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_OrgEvents(OrgEvent entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_OrgEvents(OrgEvent entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserOrgs")]
	public partial class UserOrg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _User_ID;
		
		private int _Organization_ID;
		
		private System.DateTime _active_date;
		
		private System.Nullable<System.DateTime> _inactive_date;
		
		private EntityRef<User> _User;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(string value);
    partial void OnUser_IDChanged();
    partial void OnOrganization_IDChanging(int value);
    partial void OnOrganization_IDChanged();
    partial void Onactive_dateChanging(System.DateTime value);
    partial void Onactive_dateChanged();
    partial void Oninactive_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oninactive_dateChanged();
    #endregion
		
		public UserOrg()
		{
			this._User = default(EntityRef<User>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganization_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_ID = value;
					this.SendPropertyChanged("Organization_ID");
					this.OnOrganization_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active_date", DbType="SmallDateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime active_date
		{
			get
			{
				return this._active_date;
			}
			set
			{
				if ((this._active_date != value))
				{
					this.Onactive_dateChanging(value);
					this.SendPropertyChanging();
					this._active_date = value;
					this.SendPropertyChanged("active_date");
					this.Onactive_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inactive_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> inactive_date
		{
			get
			{
				return this._inactive_date;
			}
			set
			{
				if ((this._inactive_date != value))
				{
					this.Oninactive_dateChanging(value);
					this.SendPropertyChanging();
					this._inactive_date = value;
					this.SendPropertyChanged("inactive_date");
					this.Oninactive_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserOrg", Storage="_User", ThisKey="User_ID", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserOrgs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserOrgs.Add(this);
						this._User_ID = value.User_ID;
					}
					else
					{
						this._User_ID = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_UserOrg", Storage="_Organization", ThisKey="Organization_ID", OtherKey="Organization_ID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.UserOrgs.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.UserOrgs.Add(this);
						this._Organization_ID = value.Organization_ID;
					}
					else
					{
						this._Organization_ID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Term")]
	public partial class Term
	{
		
		private string _Session;
		
		private string _Year;
		
		public Term()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Session", DbType="VarChar(10)")]
		public string Session
		{
			get
			{
				return this._Session;
			}
			set
			{
				if ((this._Session != value))
				{
					this._Session = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(4)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentRoster")]
	public partial class StudentRoster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Organization_ID;
		
		private int _Student_ID;
		
		private System.DateTime _BeginDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private int _Member_ID;
		
		private string _Session;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<int> _Status_ID;
		
		private System.Nullable<bool> _PrimaryContact;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<MemberType> _MemberType;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganization_IDChanging(int value);
    partial void OnOrganization_IDChanged();
    partial void OnStudent_IDChanging(int value);
    partial void OnStudent_IDChanged();
    partial void OnBeginDateChanging(System.DateTime value);
    partial void OnBeginDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnMember_IDChanging(int value);
    partial void OnMember_IDChanged();
    partial void OnSessionChanging(string value);
    partial void OnSessionChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnStatus_IDChanging(System.Nullable<int> value);
    partial void OnStatus_IDChanged();
    partial void OnPrimaryContactChanging(System.Nullable<bool> value);
    partial void OnPrimaryContactChanged();
    #endregion
		
		public StudentRoster()
		{
			this._Student = default(EntityRef<Student>);
			this._MemberType = default(EntityRef<MemberType>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganization_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_ID = value;
					this.SendPropertyChanged("Organization_ID");
					this.OnOrganization_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime BeginDate
		{
			get
			{
				return this._BeginDate;
			}
			set
			{
				if ((this._BeginDate != value))
				{
					this.OnBeginDateChanging(value);
					this.SendPropertyChanging();
					this._BeginDate = value;
					this.SendPropertyChanged("BeginDate");
					this.OnBeginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Member_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Member_ID
		{
			get
			{
				return this._Member_ID;
			}
			set
			{
				if ((this._Member_ID != value))
				{
					if (this._MemberType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMember_IDChanging(value);
					this.SendPropertyChanging();
					this._Member_ID = value;
					this.SendPropertyChanged("Member_ID");
					this.OnMember_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Session", DbType="Char(4)")]
		public string Session
		{
			get
			{
				return this._Session;
			}
			set
			{
				if ((this._Session != value))
				{
					this.OnSessionChanging(value);
					this.SendPropertyChanging();
					this._Session = value;
					this.SendPropertyChanged("Session");
					this.OnSessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_ID", DbType="Int")]
		public System.Nullable<int> Status_ID
		{
			get
			{
				return this._Status_ID;
			}
			set
			{
				if ((this._Status_ID != value))
				{
					this.OnStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_ID = value;
					this.SendPropertyChanged("Status_ID");
					this.OnStatus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaryContact", DbType="Bit")]
		public System.Nullable<bool> PrimaryContact
		{
			get
			{
				return this._PrimaryContact;
			}
			set
			{
				if ((this._PrimaryContact != value))
				{
					this.OnPrimaryContactChanging(value);
					this.SendPropertyChanging();
					this._PrimaryContact = value;
					this.SendPropertyChanged("PrimaryContact");
					this.OnPrimaryContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentRoster", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.StudentRosters.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.StudentRosters.Add(this);
						this._Student_ID = value.Student_ID;
					}
					else
					{
						this._Student_ID = default(int);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MemberType_StudentRoster", Storage="_MemberType", ThisKey="Member_ID", OtherKey="Member_ID", IsForeignKey=true)]
		public MemberType MemberType
		{
			get
			{
				return this._MemberType.Entity;
			}
			set
			{
				MemberType previousValue = this._MemberType.Entity;
				if (((previousValue != value) 
							|| (this._MemberType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MemberType.Entity = null;
						previousValue.StudentRosters.Remove(this);
					}
					this._MemberType.Entity = value;
					if ((value != null))
					{
						value.StudentRosters.Add(this);
						this._Member_ID = value.Member_ID;
					}
					else
					{
						this._Member_ID = default(int);
					}
					this.SendPropertyChanged("MemberType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_StudentRoster", Storage="_Organization", ThisKey="Organization_ID", OtherKey="Organization_ID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.StudentRosters.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.StudentRosters.Add(this);
						this._Organization_ID = value.Organization_ID;
					}
					else
					{
						this._Organization_ID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Student_ID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _ClassOf;
		
		private string _Address;
		
		private string _Email;
		
		private string _PreferredPhone;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _Gender;
		
		private System.Nullable<int> _Carroll_ID;
		
		private System.Nullable<bool> _GPAOrg;
		
		private string _Major;
		
		private string _Major2;
		
		private System.Nullable<bool> _CertifiedDriver;
		
		private System.Nullable<bool> _ApprovedDriver;
		
		private System.Nullable<bool> _GPABoard;
		
		private System.Nullable<bool> _Ferpa;
		
		private System.Nullable<bool> _GreekGPA;
		
		private char _OnCampus;
		
		private string _Race;
		
		private char _International;
		
		private EntitySet<StudentRoster> _StudentRosters;
		
		private EntitySet<OrgEvent> _OrgEvents;
		
		private EntitySet<OrgEvent> _OrgEvents1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudent_IDChanging(int value);
    partial void OnStudent_IDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnClassOfChanging(string value);
    partial void OnClassOfChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPreferredPhoneChanging(string value);
    partial void OnPreferredPhoneChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnCarroll_IDChanging(System.Nullable<int> value);
    partial void OnCarroll_IDChanged();
    partial void OnGPAOrgChanging(System.Nullable<bool> value);
    partial void OnGPAOrgChanged();
    partial void OnMajorChanging(string value);
    partial void OnMajorChanged();
    partial void OnMajor2Changing(string value);
    partial void OnMajor2Changed();
    partial void OnCertifiedDriverChanging(System.Nullable<bool> value);
    partial void OnCertifiedDriverChanged();
    partial void OnApprovedDriverChanging(System.Nullable<bool> value);
    partial void OnApprovedDriverChanged();
    partial void OnGPABoardChanging(System.Nullable<bool> value);
    partial void OnGPABoardChanged();
    partial void OnFerpaChanging(System.Nullable<bool> value);
    partial void OnFerpaChanged();
    partial void OnGreekGPAChanging(System.Nullable<bool> value);
    partial void OnGreekGPAChanged();
    partial void OnOnCampusChanging(char value);
    partial void OnOnCampusChanged();
    partial void OnRaceChanging(string value);
    partial void OnRaceChanged();
    partial void OnInternationalChanging(char value);
    partial void OnInternationalChanged();
    #endregion
		
		public Student()
		{
			this._StudentRosters = new EntitySet<StudentRoster>(new Action<StudentRoster>(this.attach_StudentRosters), new Action<StudentRoster>(this.detach_StudentRosters));
			this._OrgEvents = new EntitySet<OrgEvent>(new Action<OrgEvent>(this.attach_OrgEvents), new Action<OrgEvent>(this.detach_OrgEvents));
			this._OrgEvents1 = new EntitySet<OrgEvent>(new Action<OrgEvent>(this.attach_OrgEvents1), new Action<OrgEvent>(this.detach_OrgEvents1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this.OnStudent_IDChanging(value);
					this.SendPropertyChanging();
					this._Student_ID = value;
					this.SendPropertyChanged("Student_ID");
					this.OnStudent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(20)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(20)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassOf", DbType="VarChar(2)")]
		public string ClassOf
		{
			get
			{
				return this._ClassOf;
			}
			set
			{
				if ((this._ClassOf != value))
				{
					this.OnClassOfChanging(value);
					this.SendPropertyChanging();
					this._ClassOf = value;
					this.SendPropertyChanged("ClassOf");
					this.OnClassOfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreferredPhone", DbType="VarChar(20)")]
		public string PreferredPhone
		{
			get
			{
				return this._PreferredPhone;
			}
			set
			{
				if ((this._PreferredPhone != value))
				{
					this.OnPreferredPhoneChanging(value);
					this.SendPropertyChanging();
					this._PreferredPhone = value;
					this.SendPropertyChanged("PreferredPhone");
					this.OnPreferredPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carroll_ID", DbType="Int")]
		public System.Nullable<int> Carroll_ID
		{
			get
			{
				return this._Carroll_ID;
			}
			set
			{
				if ((this._Carroll_ID != value))
				{
					this.OnCarroll_IDChanging(value);
					this.SendPropertyChanging();
					this._Carroll_ID = value;
					this.SendPropertyChanged("Carroll_ID");
					this.OnCarroll_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPAOrg", DbType="Bit")]
		public System.Nullable<bool> GPAOrg
		{
			get
			{
				return this._GPAOrg;
			}
			set
			{
				if ((this._GPAOrg != value))
				{
					this.OnGPAOrgChanging(value);
					this.SendPropertyChanging();
					this._GPAOrg = value;
					this.SendPropertyChanged("GPAOrg");
					this.OnGPAOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major", DbType="VarChar(50)")]
		public string Major
		{
			get
			{
				return this._Major;
			}
			set
			{
				if ((this._Major != value))
				{
					this.OnMajorChanging(value);
					this.SendPropertyChanging();
					this._Major = value;
					this.SendPropertyChanged("Major");
					this.OnMajorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Major2", DbType="VarChar(50)")]
		public string Major2
		{
			get
			{
				return this._Major2;
			}
			set
			{
				if ((this._Major2 != value))
				{
					this.OnMajor2Changing(value);
					this.SendPropertyChanging();
					this._Major2 = value;
					this.SendPropertyChanged("Major2");
					this.OnMajor2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertifiedDriver", DbType="Bit")]
		public System.Nullable<bool> CertifiedDriver
		{
			get
			{
				return this._CertifiedDriver;
			}
			set
			{
				if ((this._CertifiedDriver != value))
				{
					this.OnCertifiedDriverChanging(value);
					this.SendPropertyChanging();
					this._CertifiedDriver = value;
					this.SendPropertyChanged("CertifiedDriver");
					this.OnCertifiedDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDriver", DbType="Bit")]
		public System.Nullable<bool> ApprovedDriver
		{
			get
			{
				return this._ApprovedDriver;
			}
			set
			{
				if ((this._ApprovedDriver != value))
				{
					this.OnApprovedDriverChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDriver = value;
					this.SendPropertyChanged("ApprovedDriver");
					this.OnApprovedDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPABoard", DbType="Bit")]
		public System.Nullable<bool> GPABoard
		{
			get
			{
				return this._GPABoard;
			}
			set
			{
				if ((this._GPABoard != value))
				{
					this.OnGPABoardChanging(value);
					this.SendPropertyChanging();
					this._GPABoard = value;
					this.SendPropertyChanged("GPABoard");
					this.OnGPABoardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ferpa", DbType="Bit")]
		public System.Nullable<bool> Ferpa
		{
			get
			{
				return this._Ferpa;
			}
			set
			{
				if ((this._Ferpa != value))
				{
					this.OnFerpaChanging(value);
					this.SendPropertyChanging();
					this._Ferpa = value;
					this.SendPropertyChanged("Ferpa");
					this.OnFerpaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GreekGPA", DbType="Bit")]
		public System.Nullable<bool> GreekGPA
		{
			get
			{
				return this._GreekGPA;
			}
			set
			{
				if ((this._GreekGPA != value))
				{
					this.OnGreekGPAChanging(value);
					this.SendPropertyChanging();
					this._GreekGPA = value;
					this.SendPropertyChanged("GreekGPA");
					this.OnGreekGPAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnCampus", DbType="Char(1) NOT NULL")]
		public char OnCampus
		{
			get
			{
				return this._OnCampus;
			}
			set
			{
				if ((this._OnCampus != value))
				{
					this.OnOnCampusChanging(value);
					this.SendPropertyChanging();
					this._OnCampus = value;
					this.SendPropertyChanged("OnCampus");
					this.OnOnCampusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_International", DbType="Char(1) NOT NULL")]
		public char International
		{
			get
			{
				return this._International;
			}
			set
			{
				if ((this._International != value))
				{
					this.OnInternationalChanging(value);
					this.SendPropertyChanging();
					this._International = value;
					this.SendPropertyChanged("International");
					this.OnInternationalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_StudentRoster", Storage="_StudentRosters", ThisKey="Student_ID", OtherKey="Student_ID")]
		public EntitySet<StudentRoster> StudentRosters
		{
			get
			{
				return this._StudentRosters;
			}
			set
			{
				this._StudentRosters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_OrgEvent", Storage="_OrgEvents", ThisKey="Student_ID", OtherKey="Driver1")]
		public EntitySet<OrgEvent> OrgEvents
		{
			get
			{
				return this._OrgEvents;
			}
			set
			{
				this._OrgEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_OrgEvent1", Storage="_OrgEvents1", ThisKey="Student_ID", OtherKey="Driver2")]
		public EntitySet<OrgEvent> OrgEvents1
		{
			get
			{
				return this._OrgEvents1;
			}
			set
			{
				this._OrgEvents1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentRosters(StudentRoster entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_StudentRosters(StudentRoster entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_OrgEvents(OrgEvent entity)
		{
			this.SendPropertyChanging();
			entity.Student = this;
		}
		
		private void detach_OrgEvents(OrgEvent entity)
		{
			this.SendPropertyChanging();
			entity.Student = null;
		}
		
		private void attach_OrgEvents1(OrgEvent entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = this;
		}
		
		private void detach_OrgEvents1(OrgEvent entity)
		{
			this.SendPropertyChanging();
			entity.Student1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceProjectComments")]
	public partial class ServiceProjectComment
	{
		
		private int _ServiceProject_ID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _text;
		
		private string _UserID;
		
		public ServiceProjectComment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProject_ID", DbType="Int NOT NULL")]
		public int ServiceProject_ID
		{
			get
			{
				return this._ServiceProject_ID;
			}
			set
			{
				if ((this._ServiceProject_ID != value))
				{
					this._ServiceProject_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this._text = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceProject")]
	public partial class ServiceProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceProject_ID;
		
		private int _Organization_ID;
		
		private string _CommunityPartner;
		
		private string _ContactName;
		
		private string _ContactPhone;
		
		private string _ContactEmail;
		
		private System.Nullable<int> _NoOfVolunteers;
		
		private System.Nullable<int> _HoursVolunteered;
		
		private string _Description;
		
		private System.Nullable<bool> _OnGoing;
		
		private string _Location;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _TimeFrom;
		
		private string _TimeTo;
		
		private string _MeetDay;
		
		private string _MeetFrequency;
		
		private string _Title;
		
		private string _Funds;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceProject_IDChanging(int value);
    partial void OnServiceProject_IDChanged();
    partial void OnOrganization_IDChanging(int value);
    partial void OnOrganization_IDChanged();
    partial void OnCommunityPartnerChanging(string value);
    partial void OnCommunityPartnerChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnNoOfVolunteersChanging(System.Nullable<int> value);
    partial void OnNoOfVolunteersChanged();
    partial void OnHoursVolunteeredChanging(System.Nullable<int> value);
    partial void OnHoursVolunteeredChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOnGoingChanging(System.Nullable<bool> value);
    partial void OnOnGoingChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnTimeFromChanging(string value);
    partial void OnTimeFromChanged();
    partial void OnTimeToChanging(string value);
    partial void OnTimeToChanged();
    partial void OnMeetDayChanging(string value);
    partial void OnMeetDayChanged();
    partial void OnMeetFrequencyChanging(string value);
    partial void OnMeetFrequencyChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFundsChanging(string value);
    partial void OnFundsChanged();
    #endregion
		
		public ServiceProject()
		{
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProject_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceProject_ID
		{
			get
			{
				return this._ServiceProject_ID;
			}
			set
			{
				if ((this._ServiceProject_ID != value))
				{
					this.OnServiceProject_IDChanging(value);
					this.SendPropertyChanging();
					this._ServiceProject_ID = value;
					this.SendPropertyChanged("ServiceProject_ID");
					this.OnServiceProject_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL")]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganization_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_ID = value;
					this.SendPropertyChanged("Organization_ID");
					this.OnOrganization_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunityPartner", DbType="VarChar(150)")]
		public string CommunityPartner
		{
			get
			{
				return this._CommunityPartner;
			}
			set
			{
				if ((this._CommunityPartner != value))
				{
					this.OnCommunityPartnerChanging(value);
					this.SendPropertyChanging();
					this._CommunityPartner = value;
					this.SendPropertyChanged("CommunityPartner");
					this.OnCommunityPartnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(50)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(50)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="VarChar(50)")]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfVolunteers", DbType="Int")]
		public System.Nullable<int> NoOfVolunteers
		{
			get
			{
				return this._NoOfVolunteers;
			}
			set
			{
				if ((this._NoOfVolunteers != value))
				{
					this.OnNoOfVolunteersChanging(value);
					this.SendPropertyChanging();
					this._NoOfVolunteers = value;
					this.SendPropertyChanged("NoOfVolunteers");
					this.OnNoOfVolunteersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursVolunteered", DbType="Int")]
		public System.Nullable<int> HoursVolunteered
		{
			get
			{
				return this._HoursVolunteered;
			}
			set
			{
				if ((this._HoursVolunteered != value))
				{
					this.OnHoursVolunteeredChanging(value);
					this.SendPropertyChanging();
					this._HoursVolunteered = value;
					this.SendPropertyChanged("HoursVolunteered");
					this.OnHoursVolunteeredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnGoing", DbType="Bit")]
		public System.Nullable<bool> OnGoing
		{
			get
			{
				return this._OnGoing;
			}
			set
			{
				if ((this._OnGoing != value))
				{
					this.OnOnGoingChanging(value);
					this.SendPropertyChanging();
					this._OnGoing = value;
					this.SendPropertyChanged("OnGoing");
					this.OnOnGoingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFrom", DbType="VarChar(10)")]
		public string TimeFrom
		{
			get
			{
				return this._TimeFrom;
			}
			set
			{
				if ((this._TimeFrom != value))
				{
					this.OnTimeFromChanging(value);
					this.SendPropertyChanging();
					this._TimeFrom = value;
					this.SendPropertyChanged("TimeFrom");
					this.OnTimeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTo", DbType="VarChar(10)")]
		public string TimeTo
		{
			get
			{
				return this._TimeTo;
			}
			set
			{
				if ((this._TimeTo != value))
				{
					this.OnTimeToChanging(value);
					this.SendPropertyChanging();
					this._TimeTo = value;
					this.SendPropertyChanged("TimeTo");
					this.OnTimeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetDay", DbType="VarChar(20)")]
		public string MeetDay
		{
			get
			{
				return this._MeetDay;
			}
			set
			{
				if ((this._MeetDay != value))
				{
					this.OnMeetDayChanging(value);
					this.SendPropertyChanging();
					this._MeetDay = value;
					this.SendPropertyChanged("MeetDay");
					this.OnMeetDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetFrequency", DbType="VarChar(150)")]
		public string MeetFrequency
		{
			get
			{
				return this._MeetFrequency;
			}
			set
			{
				if ((this._MeetFrequency != value))
				{
					this.OnMeetFrequencyChanging(value);
					this.SendPropertyChanging();
					this._MeetFrequency = value;
					this.SendPropertyChanged("MeetFrequency");
					this.OnMeetFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Funds", DbType="VarChar(250)")]
		public string Funds
		{
			get
			{
				return this._Funds;
			}
			set
			{
				if ((this._Funds != value))
				{
					this.OnFundsChanging(value);
					this.SendPropertyChanging();
					this._Funds = value;
					this.SendPropertyChanged("Funds");
					this.OnFundsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ServiceProject", Storage="_Organization", ThisKey="Organization_ID", OtherKey="Organization_ID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.ServiceProjects.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.ServiceProjects.Add(this);
						this._Organization_ID = value.Organization_ID;
					}
					else
					{
						this._Organization_ID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Role_ID;
		
		private string _Role_Name;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRole_IDChanging(int value);
    partial void OnRole_IDChanged();
    partial void OnRole_NameChanging(string value);
    partial void OnRole_NameChanged();
    #endregion
		
		public Role()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					this.OnRole_IDChanging(value);
					this.SendPropertyChanging();
					this._Role_ID = value;
					this.SendPropertyChanged("Role_ID");
					this.OnRole_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Role_Name
		{
			get
			{
				return this._Role_Name;
			}
			set
			{
				if ((this._Role_Name != value))
				{
					this.OnRole_NameChanging(value);
					this.SendPropertyChanging();
					this._Role_Name = value;
					this.SendPropertyChanged("Role_Name");
					this.OnRole_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="Role_ID", OtherKey="Role_ID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrgStatus")]
	public partial class OrgStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Organization_ID;
		
		private int _Status_ID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganization_IDChanging(int value);
    partial void OnOrganization_IDChanged();
    partial void OnStatus_IDChanging(int value);
    partial void OnStatus_IDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public OrgStatus()
		{
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganization_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_ID = value;
					this.SendPropertyChanged("Organization_ID");
					this.OnOrganization_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Status_ID
		{
			get
			{
				return this._Status_ID;
			}
			set
			{
				if ((this._Status_ID != value))
				{
					this.OnStatus_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_ID = value;
					this.SendPropertyChanged("Status_ID");
					this.OnStatus_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrgStatus", Storage="_Organization", ThisKey="Organization_ID", OtherKey="Organization_ID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrgStatus.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrgStatus.Add(this);
						this._Organization_ID = value.Organization_ID;
					}
					else
					{
						this._Organization_ID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrgEvent")]
	public partial class OrgEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Event_ID;
		
		private int _Organization_ID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Time;
		
		private string _Location;
		
		private string _Description;
		
		private string _OrganizationWorkedWith;
		
		private string _ContactPhone;
		
		private string _ContactEmail;
		
		private System.Nullable<int> _Attendance;
		
		private System.Nullable<int> _HoursVolunteered;
		
		private System.Nullable<decimal> _DollarsSpentByOrg;
		
		private string _Title;
		
		private System.Nullable<bool> _EventType;
		
		private System.Nullable<bool> _OnOffCampus;
		
		private System.Nullable<int> _VanRental;
		
		private System.Nullable<int> _BusRental;
		
		private string _ContactName;
		
		private System.Nullable<int> _Driver1;
		
		private System.Nullable<int> _Driver2;
		
		private System.Nullable<decimal> _DollarsSpentByPartner;
		
		private string _CreatedByUser;
		
		private bool _RoomReserved;
		
		private bool _Marketing;
		
		private bool _Catering;
		
		private bool _SignupForm;
		
		private bool _ActivityWaiver;
		
		private bool _CUNight;
		
		private EntityRef<Student> _Student;
		
		private EntityRef<Student> _Student1;
		
		private EntityRef<User> _User;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEvent_IDChanging(int value);
    partial void OnEvent_IDChanged();
    partial void OnOrganization_IDChanging(int value);
    partial void OnOrganization_IDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnOrganizationWorkedWithChanging(string value);
    partial void OnOrganizationWorkedWithChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnAttendanceChanging(System.Nullable<int> value);
    partial void OnAttendanceChanged();
    partial void OnHoursVolunteeredChanging(System.Nullable<int> value);
    partial void OnHoursVolunteeredChanged();
    partial void OnDollarsSpentByOrgChanging(System.Nullable<decimal> value);
    partial void OnDollarsSpentByOrgChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnEventTypeChanging(System.Nullable<bool> value);
    partial void OnEventTypeChanged();
    partial void OnOnOffCampusChanging(System.Nullable<bool> value);
    partial void OnOnOffCampusChanged();
    partial void OnVanRentalChanging(System.Nullable<int> value);
    partial void OnVanRentalChanged();
    partial void OnBusRentalChanging(System.Nullable<int> value);
    partial void OnBusRentalChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnDriver1Changing(System.Nullable<int> value);
    partial void OnDriver1Changed();
    partial void OnDriver2Changing(System.Nullable<int> value);
    partial void OnDriver2Changed();
    partial void OnDollarsSpentByPartnerChanging(System.Nullable<decimal> value);
    partial void OnDollarsSpentByPartnerChanged();
    partial void OnCreatedByUserChanging(string value);
    partial void OnCreatedByUserChanged();
    partial void OnRoomReservedChanging(bool value);
    partial void OnRoomReservedChanged();
    partial void OnMarketingChanging(bool value);
    partial void OnMarketingChanged();
    partial void OnCateringChanging(bool value);
    partial void OnCateringChanged();
    partial void OnSignupFormChanging(bool value);
    partial void OnSignupFormChanged();
    partial void OnActivityWaiverChanging(bool value);
    partial void OnActivityWaiverChanged();
    partial void OnCUNightChanging(bool value);
    partial void OnCUNightChanged();
    #endregion
		
		public OrgEvent()
		{
			this._Student = default(EntityRef<Student>);
			this._Student1 = default(EntityRef<Student>);
			this._User = default(EntityRef<User>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Event_ID
		{
			get
			{
				return this._Event_ID;
			}
			set
			{
				if ((this._Event_ID != value))
				{
					this.OnEvent_IDChanging(value);
					this.SendPropertyChanging();
					this._Event_ID = value;
					this.SendPropertyChanged("Event_ID");
					this.OnEvent_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL")]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganization_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_ID = value;
					this.SendPropertyChanged("Organization_ID");
					this.OnOrganization_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationWorkedWith", DbType="VarChar(50)")]
		public string OrganizationWorkedWith
		{
			get
			{
				return this._OrganizationWorkedWith;
			}
			set
			{
				if ((this._OrganizationWorkedWith != value))
				{
					this.OnOrganizationWorkedWithChanging(value);
					this.SendPropertyChanging();
					this._OrganizationWorkedWith = value;
					this.SendPropertyChanged("OrganizationWorkedWith");
					this.OnOrganizationWorkedWithChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(50)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="VarChar(50)")]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendance", DbType="Int")]
		public System.Nullable<int> Attendance
		{
			get
			{
				return this._Attendance;
			}
			set
			{
				if ((this._Attendance != value))
				{
					this.OnAttendanceChanging(value);
					this.SendPropertyChanging();
					this._Attendance = value;
					this.SendPropertyChanged("Attendance");
					this.OnAttendanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursVolunteered", DbType="Int")]
		public System.Nullable<int> HoursVolunteered
		{
			get
			{
				return this._HoursVolunteered;
			}
			set
			{
				if ((this._HoursVolunteered != value))
				{
					this.OnHoursVolunteeredChanging(value);
					this.SendPropertyChanging();
					this._HoursVolunteered = value;
					this.SendPropertyChanged("HoursVolunteered");
					this.OnHoursVolunteeredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarsSpentByOrg", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DollarsSpentByOrg
		{
			get
			{
				return this._DollarsSpentByOrg;
			}
			set
			{
				if ((this._DollarsSpentByOrg != value))
				{
					this.OnDollarsSpentByOrgChanging(value);
					this.SendPropertyChanging();
					this._DollarsSpentByOrg = value;
					this.SendPropertyChanged("DollarsSpentByOrg");
					this.OnDollarsSpentByOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="Bit")]
		public System.Nullable<bool> EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnOffCampus", DbType="Bit")]
		public System.Nullable<bool> OnOffCampus
		{
			get
			{
				return this._OnOffCampus;
			}
			set
			{
				if ((this._OnOffCampus != value))
				{
					this.OnOnOffCampusChanging(value);
					this.SendPropertyChanging();
					this._OnOffCampus = value;
					this.SendPropertyChanged("OnOffCampus");
					this.OnOnOffCampusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VanRental", DbType="Int")]
		public System.Nullable<int> VanRental
		{
			get
			{
				return this._VanRental;
			}
			set
			{
				if ((this._VanRental != value))
				{
					this.OnVanRentalChanging(value);
					this.SendPropertyChanging();
					this._VanRental = value;
					this.SendPropertyChanged("VanRental");
					this.OnVanRentalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusRental", DbType="Int")]
		public System.Nullable<int> BusRental
		{
			get
			{
				return this._BusRental;
			}
			set
			{
				if ((this._BusRental != value))
				{
					this.OnBusRentalChanging(value);
					this.SendPropertyChanging();
					this._BusRental = value;
					this.SendPropertyChanged("BusRental");
					this.OnBusRentalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(50)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver1", DbType="Int")]
		public System.Nullable<int> Driver1
		{
			get
			{
				return this._Driver1;
			}
			set
			{
				if ((this._Driver1 != value))
				{
					if (this._Student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDriver1Changing(value);
					this.SendPropertyChanging();
					this._Driver1 = value;
					this.SendPropertyChanged("Driver1");
					this.OnDriver1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver2", DbType="Int")]
		public System.Nullable<int> Driver2
		{
			get
			{
				return this._Driver2;
			}
			set
			{
				if ((this._Driver2 != value))
				{
					if (this._Student1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDriver2Changing(value);
					this.SendPropertyChanging();
					this._Driver2 = value;
					this.SendPropertyChanged("Driver2");
					this.OnDriver2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarsSpentByPartner", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DollarsSpentByPartner
		{
			get
			{
				return this._DollarsSpentByPartner;
			}
			set
			{
				if ((this._DollarsSpentByPartner != value))
				{
					this.OnDollarsSpentByPartnerChanging(value);
					this.SendPropertyChanging();
					this._DollarsSpentByPartner = value;
					this.SendPropertyChanged("DollarsSpentByPartner");
					this.OnDollarsSpentByPartnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUser = value;
					this.SendPropertyChanged("CreatedByUser");
					this.OnCreatedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomReserved", DbType="Bit NOT NULL")]
		public bool RoomReserved
		{
			get
			{
				return this._RoomReserved;
			}
			set
			{
				if ((this._RoomReserved != value))
				{
					this.OnRoomReservedChanging(value);
					this.SendPropertyChanging();
					this._RoomReserved = value;
					this.SendPropertyChanged("RoomReserved");
					this.OnRoomReservedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marketing", DbType="Bit NOT NULL")]
		public bool Marketing
		{
			get
			{
				return this._Marketing;
			}
			set
			{
				if ((this._Marketing != value))
				{
					this.OnMarketingChanging(value);
					this.SendPropertyChanging();
					this._Marketing = value;
					this.SendPropertyChanged("Marketing");
					this.OnMarketingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catering", DbType="Bit NOT NULL")]
		public bool Catering
		{
			get
			{
				return this._Catering;
			}
			set
			{
				if ((this._Catering != value))
				{
					this.OnCateringChanging(value);
					this.SendPropertyChanging();
					this._Catering = value;
					this.SendPropertyChanged("Catering");
					this.OnCateringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignupForm", DbType="Bit NOT NULL")]
		public bool SignupForm
		{
			get
			{
				return this._SignupForm;
			}
			set
			{
				if ((this._SignupForm != value))
				{
					this.OnSignupFormChanging(value);
					this.SendPropertyChanging();
					this._SignupForm = value;
					this.SendPropertyChanged("SignupForm");
					this.OnSignupFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityWaiver", DbType="Bit NOT NULL")]
		public bool ActivityWaiver
		{
			get
			{
				return this._ActivityWaiver;
			}
			set
			{
				if ((this._ActivityWaiver != value))
				{
					this.OnActivityWaiverChanging(value);
					this.SendPropertyChanging();
					this._ActivityWaiver = value;
					this.SendPropertyChanged("ActivityWaiver");
					this.OnActivityWaiverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUNight", DbType="Bit NOT NULL")]
		public bool CUNight
		{
			get
			{
				return this._CUNight;
			}
			set
			{
				if ((this._CUNight != value))
				{
					this.OnCUNightChanging(value);
					this.SendPropertyChanging();
					this._CUNight = value;
					this.SendPropertyChanged("CUNight");
					this.OnCUNightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_OrgEvent", Storage="_Student", ThisKey="Driver1", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student
		{
			get
			{
				return this._Student.Entity;
			}
			set
			{
				Student previousValue = this._Student.Entity;
				if (((previousValue != value) 
							|| (this._Student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student.Entity = null;
						previousValue.OrgEvents.Remove(this);
					}
					this._Student.Entity = value;
					if ((value != null))
					{
						value.OrgEvents.Add(this);
						this._Driver1 = value.Student_ID;
					}
					else
					{
						this._Driver1 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Student");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_OrgEvent1", Storage="_Student1", ThisKey="Driver2", OtherKey="Student_ID", IsForeignKey=true)]
		public Student Student1
		{
			get
			{
				return this._Student1.Entity;
			}
			set
			{
				Student previousValue = this._Student1.Entity;
				if (((previousValue != value) 
							|| (this._Student1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Student1.Entity = null;
						previousValue.OrgEvents1.Remove(this);
					}
					this._Student1.Entity = value;
					if ((value != null))
					{
						value.OrgEvents1.Add(this);
						this._Driver2 = value.Student_ID;
					}
					else
					{
						this._Driver2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("Student1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_OrgEvent", Storage="_User", ThisKey="CreatedByUser", OtherKey="User_ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.OrgEvents.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.OrgEvents.Add(this);
						this._CreatedByUser = value.User_ID;
					}
					else
					{
						this._CreatedByUser = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrgEvent", Storage="_Organization", ThisKey="Organization_ID", OtherKey="Organization_ID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrgEvents.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrgEvents.Add(this);
						this._Organization_ID = value.Organization_ID;
					}
					else
					{
						this._Organization_ID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrgDocs")]
	public partial class OrgDoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrgDocs_ID;
		
		private string _DocName;
		
		private System.Nullable<System.DateTime> _DocDate;
		
		private System.Nullable<System.DateTime> _DocDueDate;
		
		private System.Data.Linq.Binary _UploadedFile;
		
		private System.Nullable<int> _Organization_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrgDocs_IDChanging(int value);
    partial void OnOrgDocs_IDChanged();
    partial void OnDocNameChanging(string value);
    partial void OnDocNameChanged();
    partial void OnDocDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocDateChanged();
    partial void OnDocDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocDueDateChanged();
    partial void OnUploadedFileChanging(System.Data.Linq.Binary value);
    partial void OnUploadedFileChanged();
    partial void OnOrganization_IDChanging(System.Nullable<int> value);
    partial void OnOrganization_IDChanged();
    #endregion
		
		public OrgDoc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgDocs_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrgDocs_ID
		{
			get
			{
				return this._OrgDocs_ID;
			}
			set
			{
				if ((this._OrgDocs_ID != value))
				{
					this.OnOrgDocs_IDChanging(value);
					this.SendPropertyChanging();
					this._OrgDocs_ID = value;
					this.SendPropertyChanged("OrgDocs_ID");
					this.OnOrgDocs_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocName", DbType="VarChar(50)")]
		public string DocName
		{
			get
			{
				return this._DocName;
			}
			set
			{
				if ((this._DocName != value))
				{
					this.OnDocNameChanging(value);
					this.SendPropertyChanging();
					this._DocName = value;
					this.SendPropertyChanged("DocName");
					this.OnDocNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DocDate
		{
			get
			{
				return this._DocDate;
			}
			set
			{
				if ((this._DocDate != value))
				{
					this.OnDocDateChanging(value);
					this.SendPropertyChanging();
					this._DocDate = value;
					this.SendPropertyChanged("DocDate");
					this.OnDocDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocDueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DocDueDate
		{
			get
			{
				return this._DocDueDate;
			}
			set
			{
				if ((this._DocDueDate != value))
				{
					this.OnDocDueDateChanging(value);
					this.SendPropertyChanging();
					this._DocDueDate = value;
					this.SendPropertyChanged("DocDueDate");
					this.OnDocDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadedFile", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary UploadedFile
		{
			get
			{
				return this._UploadedFile;
			}
			set
			{
				if ((this._UploadedFile != value))
				{
					this.OnUploadedFileChanging(value);
					this.SendPropertyChanging();
					this._UploadedFile = value;
					this.SendPropertyChanged("UploadedFile");
					this.OnUploadedFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int")]
		public System.Nullable<int> Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					this.OnOrganization_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_ID = value;
					this.SendPropertyChanged("Organization_ID");
					this.OnOrganization_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrgComments")]
	public partial class OrgComment
	{
		
		private int _Organization_ID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Text;
		
		private string _UserID;
		
		public OrgComment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL")]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					this._Organization_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this._Text = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrgCategory")]
	public partial class OrgCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Category_ID;
		
		private string _CategoryName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _AddDate;
		
		private System.Nullable<bool> _GreekOrg;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntitySet<Organization> _Organizations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategory_IDChanging(int value);
    partial void OnCategory_IDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddDateChanged();
    partial void OnGreekOrgChanging(System.Nullable<bool> value);
    partial void OnGreekOrgChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public OrgCategory()
		{
			this._Organizations = new EntitySet<Organization>(new Action<Organization>(this.attach_Organizations), new Action<Organization>(this.detach_Organizations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					this.OnCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_ID = value;
					this.SendPropertyChanged("Category_ID");
					this.OnCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(50)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this.OnAddDateChanging(value);
					this.SendPropertyChanging();
					this._AddDate = value;
					this.SendPropertyChanged("AddDate");
					this.OnAddDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GreekOrg", DbType="Bit")]
		public System.Nullable<bool> GreekOrg
		{
			get
			{
				return this._GreekOrg;
			}
			set
			{
				if ((this._GreekOrg != value))
				{
					this.OnGreekOrgChanging(value);
					this.SendPropertyChanging();
					this._GreekOrg = value;
					this.SendPropertyChanged("GreekOrg");
					this.OnGreekOrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrgCategory_Organization", Storage="_Organizations", ThisKey="Category_ID", OtherKey="Category_ID")]
		public EntitySet<Organization> Organizations
		{
			get
			{
				return this._Organizations;
			}
			set
			{
				this._Organizations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.OrgCategory = this;
		}
		
		private void detach_Organizations(Organization entity)
		{
			this.SendPropertyChanging();
			entity.OrgCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrgAdvisor")]
	public partial class OrgAdvisor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Organization_ID;
		
		private int _Advisor_ID;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntityRef<Advisor> _Advisor;
		
		private EntityRef<Organization> _Organization;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganization_IDChanging(int value);
    partial void OnOrganization_IDChanged();
    partial void OnAdvisor_IDChanging(int value);
    partial void OnAdvisor_IDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public OrgAdvisor()
		{
			this._Advisor = default(EntityRef<Advisor>);
			this._Organization = default(EntityRef<Organization>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					if (this._Organization.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganization_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_ID = value;
					this.SendPropertyChanged("Organization_ID");
					this.OnOrganization_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advisor_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Advisor_ID
		{
			get
			{
				return this._Advisor_ID;
			}
			set
			{
				if ((this._Advisor_ID != value))
				{
					if (this._Advisor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdvisor_IDChanging(value);
					this.SendPropertyChanging();
					this._Advisor_ID = value;
					this.SendPropertyChanged("Advisor_ID");
					this.OnAdvisor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advisor_OrgAdvisor", Storage="_Advisor", ThisKey="Advisor_ID", OtherKey="Advisor_ID", IsForeignKey=true)]
		public Advisor Advisor
		{
			get
			{
				return this._Advisor.Entity;
			}
			set
			{
				Advisor previousValue = this._Advisor.Entity;
				if (((previousValue != value) 
							|| (this._Advisor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Advisor.Entity = null;
						previousValue.OrgAdvisors.Remove(this);
					}
					this._Advisor.Entity = value;
					if ((value != null))
					{
						value.OrgAdvisors.Add(this);
						this._Advisor_ID = value.Advisor_ID;
					}
					else
					{
						this._Advisor_ID = default(int);
					}
					this.SendPropertyChanged("Advisor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrgAdvisor", Storage="_Organization", ThisKey="Organization_ID", OtherKey="Organization_ID", IsForeignKey=true)]
		public Organization Organization
		{
			get
			{
				return this._Organization.Entity;
			}
			set
			{
				Organization previousValue = this._Organization.Entity;
				if (((previousValue != value) 
							|| (this._Organization.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization.Entity = null;
						previousValue.OrgAdvisors.Remove(this);
					}
					this._Organization.Entity = value;
					if ((value != null))
					{
						value.OrgAdvisors.Add(this);
						this._Organization_ID = value.Organization_ID;
					}
					else
					{
						this._Organization_ID = default(int);
					}
					this.SendPropertyChanged("Organization");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberType")]
	public partial class MemberType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Member_ID;
		
		private string _MemberName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _AddDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<bool> _BoardMember;
		
		private EntitySet<StudentRoster> _StudentRosters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMember_IDChanging(int value);
    partial void OnMember_IDChanged();
    partial void OnMemberNameChanging(string value);
    partial void OnMemberNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAddDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnBoardMemberChanging(System.Nullable<bool> value);
    partial void OnBoardMemberChanged();
    #endregion
		
		public MemberType()
		{
			this._StudentRosters = new EntitySet<StudentRoster>(new Action<StudentRoster>(this.attach_StudentRosters), new Action<StudentRoster>(this.detach_StudentRosters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Member_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Member_ID
		{
			get
			{
				return this._Member_ID;
			}
			set
			{
				if ((this._Member_ID != value))
				{
					this.OnMember_IDChanging(value);
					this.SendPropertyChanging();
					this._Member_ID = value;
					this.SendPropertyChanged("Member_ID");
					this.OnMember_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="VarChar(20)")]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this.OnMemberNameChanging(value);
					this.SendPropertyChanging();
					this._MemberName = value;
					this.SendPropertyChanged("MemberName");
					this.OnMemberNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddDate
		{
			get
			{
				return this._AddDate;
			}
			set
			{
				if ((this._AddDate != value))
				{
					this.OnAddDateChanging(value);
					this.SendPropertyChanging();
					this._AddDate = value;
					this.SendPropertyChanged("AddDate");
					this.OnAddDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoardMember", DbType="Bit")]
		public System.Nullable<bool> BoardMember
		{
			get
			{
				return this._BoardMember;
			}
			set
			{
				if ((this._BoardMember != value))
				{
					this.OnBoardMemberChanging(value);
					this.SendPropertyChanging();
					this._BoardMember = value;
					this.SendPropertyChanged("BoardMember");
					this.OnBoardMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MemberType_StudentRoster", Storage="_StudentRosters", ThisKey="Member_ID", OtherKey="Member_ID")]
		public EntitySet<StudentRoster> StudentRosters
		{
			get
			{
				return this._StudentRosters;
			}
			set
			{
				this._StudentRosters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StudentRosters(StudentRoster entity)
		{
			this.SendPropertyChanging();
			entity.MemberType = this;
		}
		
		private void detach_StudentRosters(StudentRoster entity)
		{
			this.SendPropertyChanging();
			entity.MemberType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventComments")]
	public partial class EventComment
	{
		
		private int _Event_ID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _text;
		
		private string _UserID;
		
		public EventComment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_ID", DbType="Int NOT NULL")]
		public int Event_ID
		{
			get
			{
				return this._Event_ID;
			}
			set
			{
				if ((this._Event_ID != value))
				{
					this._Event_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string text
		{
			get
			{
				return this._text;
			}
			set
			{
				if ((this._text != value))
				{
					this._text = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Advisor")]
	public partial class Advisor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Advisor_ID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private System.Nullable<bool> _OffCampus;
		
		private string _ProfessionalTitle;
		
		private string _AdvisorTitle;
		
		private EntitySet<OrgAdvisor> _OrgAdvisors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdvisor_IDChanging(int value);
    partial void OnAdvisor_IDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnOffCampusChanging(System.Nullable<bool> value);
    partial void OnOffCampusChanged();
    partial void OnProfessionalTitleChanging(string value);
    partial void OnProfessionalTitleChanged();
    partial void OnAdvisorTitleChanging(string value);
    partial void OnAdvisorTitleChanged();
    #endregion
		
		public Advisor()
		{
			this._OrgAdvisors = new EntitySet<OrgAdvisor>(new Action<OrgAdvisor>(this.attach_OrgAdvisors), new Action<OrgAdvisor>(this.detach_OrgAdvisors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advisor_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Advisor_ID
		{
			get
			{
				return this._Advisor_ID;
			}
			set
			{
				if ((this._Advisor_ID != value))
				{
					this.OnAdvisor_IDChanging(value);
					this.SendPropertyChanging();
					this._Advisor_ID = value;
					this.SendPropertyChanged("Advisor_ID");
					this.OnAdvisor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(20)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(20)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OffCampus", DbType="Bit")]
		public System.Nullable<bool> OffCampus
		{
			get
			{
				return this._OffCampus;
			}
			set
			{
				if ((this._OffCampus != value))
				{
					this.OnOffCampusChanging(value);
					this.SendPropertyChanging();
					this._OffCampus = value;
					this.SendPropertyChanged("OffCampus");
					this.OnOffCampusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessionalTitle", DbType="VarChar(500)")]
		public string ProfessionalTitle
		{
			get
			{
				return this._ProfessionalTitle;
			}
			set
			{
				if ((this._ProfessionalTitle != value))
				{
					this.OnProfessionalTitleChanging(value);
					this.SendPropertyChanging();
					this._ProfessionalTitle = value;
					this.SendPropertyChanged("ProfessionalTitle");
					this.OnProfessionalTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvisorTitle", DbType="VarChar(500)")]
		public string AdvisorTitle
		{
			get
			{
				return this._AdvisorTitle;
			}
			set
			{
				if ((this._AdvisorTitle != value))
				{
					this.OnAdvisorTitleChanging(value);
					this.SendPropertyChanging();
					this._AdvisorTitle = value;
					this.SendPropertyChanged("AdvisorTitle");
					this.OnAdvisorTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Advisor_OrgAdvisor", Storage="_OrgAdvisors", ThisKey="Advisor_ID", OtherKey="Advisor_ID")]
		public EntitySet<OrgAdvisor> OrgAdvisors
		{
			get
			{
				return this._OrgAdvisors;
			}
			set
			{
				this._OrgAdvisors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrgAdvisors(OrgAdvisor entity)
		{
			this.SendPropertyChanging();
			entity.Advisor = this;
		}
		
		private void detach_OrgAdvisors(OrgAdvisor entity)
		{
			this.SendPropertyChanging();
			entity.Advisor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organization")]
	public partial class Organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Organization_ID;
		
		private string _OrganizationName;
		
		private string _Description;
		
		private string _MeetingDay;
		
		private string _MeetingTime;
		
		private string _MeetingBuilding;
		
		private string _MeetingRoom;
		
		private System.Nullable<System.DateTime> _DateProposed;
		
		private System.Nullable<System.DateTime> _ProposalAccepted;
		
		private System.Nullable<System.DateTime> _ProposalDenied;
		
		private string _ProposalNotes;
		
		private System.Nullable<System.DateTime> _ConstitutionSubmitted;
		
		private System.Nullable<System.DateTime> _ConstitutionAccepted;
		
		private string _ConstitutionNotes;
		
		private System.Nullable<System.DateTime> _RegistrarApproval;
		
		private string _CX_Code;
		
		private int _Category_ID;
		
		private System.Nullable<bool> _RequirementsMet;
		
		private System.Nullable<System.DateTime> _RequirementsMetDate;
		
		private System.Nullable<System.DateTime> _ConstitutionDenied;
		
		private System.Nullable<System.DateTime> _ConstitutionUpdated;
		
		private string _MeetingFrequency;
		
		private string _OAccount;
		
		private string _ProjectCode;
		
		private EntitySet<UserOrg> _UserOrgs;
		
		private EntitySet<StudentRoster> _StudentRosters;
		
		private EntitySet<ServiceProject> _ServiceProjects;
		
		private EntitySet<OrgStatus> _OrgStatus;
		
		private EntitySet<OrgEvent> _OrgEvents;
		
		private EntitySet<OrgAdvisor> _OrgAdvisors;
		
		private EntityRef<OrgCategory> _OrgCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganization_IDChanging(int value);
    partial void OnOrganization_IDChanged();
    partial void OnOrganizationNameChanging(string value);
    partial void OnOrganizationNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMeetingDayChanging(string value);
    partial void OnMeetingDayChanged();
    partial void OnMeetingTimeChanging(string value);
    partial void OnMeetingTimeChanged();
    partial void OnMeetingBuildingChanging(string value);
    partial void OnMeetingBuildingChanged();
    partial void OnMeetingRoomChanging(string value);
    partial void OnMeetingRoomChanged();
    partial void OnDateProposedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateProposedChanged();
    partial void OnProposalAcceptedChanging(System.Nullable<System.DateTime> value);
    partial void OnProposalAcceptedChanged();
    partial void OnProposalDeniedChanging(System.Nullable<System.DateTime> value);
    partial void OnProposalDeniedChanged();
    partial void OnProposalNotesChanging(string value);
    partial void OnProposalNotesChanged();
    partial void OnConstitutionSubmittedChanging(System.Nullable<System.DateTime> value);
    partial void OnConstitutionSubmittedChanged();
    partial void OnConstitutionAcceptedChanging(System.Nullable<System.DateTime> value);
    partial void OnConstitutionAcceptedChanged();
    partial void OnConstitutionNotesChanging(string value);
    partial void OnConstitutionNotesChanged();
    partial void OnRegistrarApprovalChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrarApprovalChanged();
    partial void OnCX_CodeChanging(string value);
    partial void OnCX_CodeChanged();
    partial void OnCategory_IDChanging(int value);
    partial void OnCategory_IDChanged();
    partial void OnRequirementsMetChanging(System.Nullable<bool> value);
    partial void OnRequirementsMetChanged();
    partial void OnRequirementsMetDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequirementsMetDateChanged();
    partial void OnConstitutionDeniedChanging(System.Nullable<System.DateTime> value);
    partial void OnConstitutionDeniedChanged();
    partial void OnConstitutionUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnConstitutionUpdatedChanged();
    partial void OnMeetingFrequencyChanging(string value);
    partial void OnMeetingFrequencyChanged();
    partial void OnOAccountChanging(string value);
    partial void OnOAccountChanged();
    partial void OnProjectCodeChanging(string value);
    partial void OnProjectCodeChanged();
    #endregion
		
		public Organization()
		{
			this._UserOrgs = new EntitySet<UserOrg>(new Action<UserOrg>(this.attach_UserOrgs), new Action<UserOrg>(this.detach_UserOrgs));
			this._StudentRosters = new EntitySet<StudentRoster>(new Action<StudentRoster>(this.attach_StudentRosters), new Action<StudentRoster>(this.detach_StudentRosters));
			this._ServiceProjects = new EntitySet<ServiceProject>(new Action<ServiceProject>(this.attach_ServiceProjects), new Action<ServiceProject>(this.detach_ServiceProjects));
			this._OrgStatus = new EntitySet<OrgStatus>(new Action<OrgStatus>(this.attach_OrgStatus), new Action<OrgStatus>(this.detach_OrgStatus));
			this._OrgEvents = new EntitySet<OrgEvent>(new Action<OrgEvent>(this.attach_OrgEvents), new Action<OrgEvent>(this.detach_OrgEvents));
			this._OrgAdvisors = new EntitySet<OrgAdvisor>(new Action<OrgAdvisor>(this.attach_OrgAdvisors), new Action<OrgAdvisor>(this.detach_OrgAdvisors));
			this._OrgCategory = default(EntityRef<OrgCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					this.OnOrganization_IDChanging(value);
					this.SendPropertyChanging();
					this._Organization_ID = value;
					this.SendPropertyChanged("Organization_ID");
					this.OnOrganization_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="VarChar(100)")]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this.OnOrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._OrganizationName = value;
					this.SendPropertyChanged("OrganizationName");
					this.OnOrganizationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingDay", DbType="VarChar(20)")]
		public string MeetingDay
		{
			get
			{
				return this._MeetingDay;
			}
			set
			{
				if ((this._MeetingDay != value))
				{
					this.OnMeetingDayChanging(value);
					this.SendPropertyChanging();
					this._MeetingDay = value;
					this.SendPropertyChanged("MeetingDay");
					this.OnMeetingDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingTime", DbType="VarChar(20)")]
		public string MeetingTime
		{
			get
			{
				return this._MeetingTime;
			}
			set
			{
				if ((this._MeetingTime != value))
				{
					this.OnMeetingTimeChanging(value);
					this.SendPropertyChanging();
					this._MeetingTime = value;
					this.SendPropertyChanged("MeetingTime");
					this.OnMeetingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingBuilding", DbType="VarChar(20)")]
		public string MeetingBuilding
		{
			get
			{
				return this._MeetingBuilding;
			}
			set
			{
				if ((this._MeetingBuilding != value))
				{
					this.OnMeetingBuildingChanging(value);
					this.SendPropertyChanging();
					this._MeetingBuilding = value;
					this.SendPropertyChanged("MeetingBuilding");
					this.OnMeetingBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingRoom", DbType="VarChar(20)")]
		public string MeetingRoom
		{
			get
			{
				return this._MeetingRoom;
			}
			set
			{
				if ((this._MeetingRoom != value))
				{
					this.OnMeetingRoomChanging(value);
					this.SendPropertyChanging();
					this._MeetingRoom = value;
					this.SendPropertyChanged("MeetingRoom");
					this.OnMeetingRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateProposed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateProposed
		{
			get
			{
				return this._DateProposed;
			}
			set
			{
				if ((this._DateProposed != value))
				{
					this.OnDateProposedChanging(value);
					this.SendPropertyChanging();
					this._DateProposed = value;
					this.SendPropertyChanged("DateProposed");
					this.OnDateProposedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposalAccepted", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProposalAccepted
		{
			get
			{
				return this._ProposalAccepted;
			}
			set
			{
				if ((this._ProposalAccepted != value))
				{
					this.OnProposalAcceptedChanging(value);
					this.SendPropertyChanging();
					this._ProposalAccepted = value;
					this.SendPropertyChanged("ProposalAccepted");
					this.OnProposalAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposalDenied", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProposalDenied
		{
			get
			{
				return this._ProposalDenied;
			}
			set
			{
				if ((this._ProposalDenied != value))
				{
					this.OnProposalDeniedChanging(value);
					this.SendPropertyChanging();
					this._ProposalDenied = value;
					this.SendPropertyChanged("ProposalDenied");
					this.OnProposalDeniedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProposalNotes", DbType="VarChar(MAX)")]
		public string ProposalNotes
		{
			get
			{
				return this._ProposalNotes;
			}
			set
			{
				if ((this._ProposalNotes != value))
				{
					this.OnProposalNotesChanging(value);
					this.SendPropertyChanging();
					this._ProposalNotes = value;
					this.SendPropertyChanged("ProposalNotes");
					this.OnProposalNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstitutionSubmitted", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConstitutionSubmitted
		{
			get
			{
				return this._ConstitutionSubmitted;
			}
			set
			{
				if ((this._ConstitutionSubmitted != value))
				{
					this.OnConstitutionSubmittedChanging(value);
					this.SendPropertyChanging();
					this._ConstitutionSubmitted = value;
					this.SendPropertyChanged("ConstitutionSubmitted");
					this.OnConstitutionSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstitutionAccepted", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConstitutionAccepted
		{
			get
			{
				return this._ConstitutionAccepted;
			}
			set
			{
				if ((this._ConstitutionAccepted != value))
				{
					this.OnConstitutionAcceptedChanging(value);
					this.SendPropertyChanging();
					this._ConstitutionAccepted = value;
					this.SendPropertyChanged("ConstitutionAccepted");
					this.OnConstitutionAcceptedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstitutionNotes", DbType="VarChar(MAX)")]
		public string ConstitutionNotes
		{
			get
			{
				return this._ConstitutionNotes;
			}
			set
			{
				if ((this._ConstitutionNotes != value))
				{
					this.OnConstitutionNotesChanging(value);
					this.SendPropertyChanging();
					this._ConstitutionNotes = value;
					this.SendPropertyChanged("ConstitutionNotes");
					this.OnConstitutionNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrarApproval", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrarApproval
		{
			get
			{
				return this._RegistrarApproval;
			}
			set
			{
				if ((this._RegistrarApproval != value))
				{
					this.OnRegistrarApprovalChanging(value);
					this.SendPropertyChanging();
					this._RegistrarApproval = value;
					this.SendPropertyChanged("RegistrarApproval");
					this.OnRegistrarApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CX_Code", DbType="NVarChar(10)")]
		public string CX_Code
		{
			get
			{
				return this._CX_Code;
			}
			set
			{
				if ((this._CX_Code != value))
				{
					this.OnCX_CodeChanging(value);
					this.SendPropertyChanging();
					this._CX_Code = value;
					this.SendPropertyChanged("CX_Code");
					this.OnCX_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", DbType="Int NOT NULL")]
		public int Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					if (this._OrgCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategory_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_ID = value;
					this.SendPropertyChanged("Category_ID");
					this.OnCategory_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequirementsMet", DbType="Bit")]
		public System.Nullable<bool> RequirementsMet
		{
			get
			{
				return this._RequirementsMet;
			}
			set
			{
				if ((this._RequirementsMet != value))
				{
					this.OnRequirementsMetChanging(value);
					this.SendPropertyChanging();
					this._RequirementsMet = value;
					this.SendPropertyChanged("RequirementsMet");
					this.OnRequirementsMetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequirementsMetDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequirementsMetDate
		{
			get
			{
				return this._RequirementsMetDate;
			}
			set
			{
				if ((this._RequirementsMetDate != value))
				{
					this.OnRequirementsMetDateChanging(value);
					this.SendPropertyChanging();
					this._RequirementsMetDate = value;
					this.SendPropertyChanged("RequirementsMetDate");
					this.OnRequirementsMetDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstitutionDenied", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConstitutionDenied
		{
			get
			{
				return this._ConstitutionDenied;
			}
			set
			{
				if ((this._ConstitutionDenied != value))
				{
					this.OnConstitutionDeniedChanging(value);
					this.SendPropertyChanging();
					this._ConstitutionDenied = value;
					this.SendPropertyChanged("ConstitutionDenied");
					this.OnConstitutionDeniedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConstitutionUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> ConstitutionUpdated
		{
			get
			{
				return this._ConstitutionUpdated;
			}
			set
			{
				if ((this._ConstitutionUpdated != value))
				{
					this.OnConstitutionUpdatedChanging(value);
					this.SendPropertyChanging();
					this._ConstitutionUpdated = value;
					this.SendPropertyChanged("ConstitutionUpdated");
					this.OnConstitutionUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingFrequency", DbType="VarChar(150)")]
		public string MeetingFrequency
		{
			get
			{
				return this._MeetingFrequency;
			}
			set
			{
				if ((this._MeetingFrequency != value))
				{
					this.OnMeetingFrequencyChanging(value);
					this.SendPropertyChanging();
					this._MeetingFrequency = value;
					this.SendPropertyChanged("MeetingFrequency");
					this.OnMeetingFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OAccount", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string OAccount
		{
			get
			{
				return this._OAccount;
			}
			set
			{
				if ((this._OAccount != value))
				{
					this.OnOAccountChanging(value);
					this.SendPropertyChanging();
					this._OAccount = value;
					this.SendPropertyChanged("OAccount");
					this.OnOAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this.OnProjectCodeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCode = value;
					this.SendPropertyChanged("ProjectCode");
					this.OnProjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_UserOrg", Storage="_UserOrgs", ThisKey="Organization_ID", OtherKey="Organization_ID")]
		public EntitySet<UserOrg> UserOrgs
		{
			get
			{
				return this._UserOrgs;
			}
			set
			{
				this._UserOrgs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_StudentRoster", Storage="_StudentRosters", ThisKey="Organization_ID", OtherKey="Organization_ID")]
		public EntitySet<StudentRoster> StudentRosters
		{
			get
			{
				return this._StudentRosters;
			}
			set
			{
				this._StudentRosters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_ServiceProject", Storage="_ServiceProjects", ThisKey="Organization_ID", OtherKey="Organization_ID")]
		public EntitySet<ServiceProject> ServiceProjects
		{
			get
			{
				return this._ServiceProjects;
			}
			set
			{
				this._ServiceProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrgStatus", Storage="_OrgStatus", ThisKey="Organization_ID", OtherKey="Organization_ID")]
		public EntitySet<OrgStatus> OrgStatus
		{
			get
			{
				return this._OrgStatus;
			}
			set
			{
				this._OrgStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrgEvent", Storage="_OrgEvents", ThisKey="Organization_ID", OtherKey="Organization_ID")]
		public EntitySet<OrgEvent> OrgEvents
		{
			get
			{
				return this._OrgEvents;
			}
			set
			{
				this._OrgEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization_OrgAdvisor", Storage="_OrgAdvisors", ThisKey="Organization_ID", OtherKey="Organization_ID")]
		public EntitySet<OrgAdvisor> OrgAdvisors
		{
			get
			{
				return this._OrgAdvisors;
			}
			set
			{
				this._OrgAdvisors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrgCategory_Organization", Storage="_OrgCategory", ThisKey="Category_ID", OtherKey="Category_ID", IsForeignKey=true)]
		public OrgCategory OrgCategory
		{
			get
			{
				return this._OrgCategory.Entity;
			}
			set
			{
				OrgCategory previousValue = this._OrgCategory.Entity;
				if (((previousValue != value) 
							|| (this._OrgCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrgCategory.Entity = null;
						previousValue.Organizations.Remove(this);
					}
					this._OrgCategory.Entity = value;
					if ((value != null))
					{
						value.Organizations.Add(this);
						this._Category_ID = value.Category_ID;
					}
					else
					{
						this._Category_ID = default(int);
					}
					this.SendPropertyChanged("OrgCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserOrgs(UserOrg entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_UserOrgs(UserOrg entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_StudentRosters(StudentRoster entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_StudentRosters(StudentRoster entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_ServiceProjects(ServiceProject entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_ServiceProjects(ServiceProject entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_OrgStatus(OrgStatus entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_OrgStatus(OrgStatus entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_OrgEvents(OrgEvent entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_OrgEvents(OrgEvent entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
		
		private void attach_OrgAdvisors(OrgAdvisor entity)
		{
			this.SendPropertyChanging();
			entity.Organization = this;
		}
		
		private void detach_OrgAdvisors(OrgAdvisor entity)
		{
			this.SendPropertyChanging();
			entity.Organization = null;
		}
	}
	
	public partial class sp_GetMyOrgsEventListResult
	{
		
		private int _Event_ID;
		
		private int _Organization_ID;
		
		private string _EventDate;
		
		private string _EventTime;
		
		private string _Title;
		
		private string _OrganizationWorkedWith;
		
		public sp_GetMyOrgsEventListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_ID", DbType="Int NOT NULL")]
		public int Event_ID
		{
			get
			{
				return this._Event_ID;
			}
			set
			{
				if ((this._Event_ID != value))
				{
					this._Event_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL")]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					this._Organization_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="VarChar(10)")]
		public string EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this._EventDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="VarChar(10)")]
		public string EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this._EventTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationWorkedWith", DbType="VarChar(50)")]
		public string OrganizationWorkedWith
		{
			get
			{
				return this._OrganizationWorkedWith;
			}
			set
			{
				if ((this._OrganizationWorkedWith != value))
				{
					this._OrganizationWorkedWith = value;
				}
			}
		}
	}
	
	public partial class sp_GetMyOrgsReportRosterResult
	{
		
		private int _Organization_ID;
		
		private int _Student_ID;
		
		private string _Term;
		
		private string _OrganizationName;
		
		private string _MemberName;
		
		private int _Member_ID;
		
		private System.Nullable<int> _Carroll_ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private int _sort_order;
		
		private string _classification;
		
		public sp_GetMyOrgsReportRosterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL")]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					this._Organization_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Int NOT NULL")]
		public int Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="VarChar(50)")]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="VarChar(100)")]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this._OrganizationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="VarChar(20)")]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this._MemberName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Member_ID", DbType="Int NOT NULL")]
		public int Member_ID
		{
			get
			{
				return this._Member_ID;
			}
			set
			{
				if ((this._Member_ID != value))
				{
					this._Member_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carroll_ID", DbType="Int")]
		public System.Nullable<int> Carroll_ID
		{
			get
			{
				return this._Carroll_ID;
			}
			set
			{
				if ((this._Carroll_ID != value))
				{
					this._Carroll_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(20)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(20)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_order", DbType="Int NOT NULL")]
		public int sort_order
		{
			get
			{
				return this._sort_order;
			}
			set
			{
				if ((this._sort_order != value))
				{
					this._sort_order = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classification", DbType="VarChar(9)")]
		public string classification
		{
			get
			{
				return this._classification;
			}
			set
			{
				if ((this._classification != value))
				{
					this._classification = value;
				}
			}
		}
	}
	
	public partial class sp_GetUserOrgsByIDResult
	{
		
		private string _User_ID;
		
		private int _Organization_ID;
		
		private System.DateTime _active_date;
		
		private System.Nullable<System.DateTime> _inactive_date;
		
		private string _OrganizationName;
		
		public sp_GetUserOrgsByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this._User_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL")]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					this._Organization_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active_date", DbType="SmallDateTime NOT NULL")]
		public System.DateTime active_date
		{
			get
			{
				return this._active_date;
			}
			set
			{
				if ((this._active_date != value))
				{
					this._active_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inactive_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> inactive_date
		{
			get
			{
				return this._inactive_date;
			}
			set
			{
				if ((this._inactive_date != value))
				{
					this._inactive_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="VarChar(100)")]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this._OrganizationName = value;
				}
			}
		}
	}
	
	public partial class sp_GetStudentByNameResult
	{
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _Email;
		
		private System.Nullable<int> _Carroll_ID;
		
		private int _Student_ID;
		
		public sp_GetStudentByNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(20)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(20)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carroll_ID", DbType="Int")]
		public System.Nullable<int> Carroll_ID
		{
			get
			{
				return this._Carroll_ID;
			}
			set
			{
				if ((this._Carroll_ID != value))
				{
					this._Carroll_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Int NOT NULL")]
		public int Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
	}
	
	public partial class sp_GetUserByIDResult
	{
		
		private string _User_ID;
		
		private string _Password;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private int _Role_ID;
		
		private bool _Is_Active;
		
		private string _Phone;
		
		private string _Email;
		
		public sp_GetUserByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this._User_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role_ID", DbType="Int NOT NULL")]
		public int Role_ID
		{
			get
			{
				return this._Role_ID;
			}
			set
			{
				if ((this._Role_ID != value))
				{
					this._Role_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Is_Active", DbType="Bit NOT NULL")]
		public bool Is_Active
		{
			get
			{
				return this._Is_Active;
			}
			set
			{
				if ((this._Is_Active != value))
				{
					this._Is_Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="Char(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(254)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
	}
	
	public partial class sp_GetDriversResult
	{
		
		private string _LastName;
		
		private string _FirstName;
		
		private int _Student_ID;
		
		private System.Nullable<bool> _CertifiedDriver;
		
		private System.Nullable<bool> _ApprovedDriver;
		
		private string _Name;
		
		public sp_GetDriversResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(20)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(20)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Int NOT NULL")]
		public int Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertifiedDriver", DbType="Bit")]
		public System.Nullable<bool> CertifiedDriver
		{
			get
			{
				return this._CertifiedDriver;
			}
			set
			{
				if ((this._CertifiedDriver != value))
				{
					this._CertifiedDriver = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDriver", DbType="Bit")]
		public System.Nullable<bool> ApprovedDriver
		{
			get
			{
				return this._ApprovedDriver;
			}
			set
			{
				if ((this._ApprovedDriver != value))
				{
					this._ApprovedDriver = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(41)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class sp_GetEventDrivers_byEventResult
	{
		
		private string _LastName;
		
		private string _FirstName;
		
		private int _Student_ID;
		
		private string _DriverType;
		
		public sp_GetEventDrivers_byEventResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(20)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(20)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Int NOT NULL")]
		public int Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverType", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string DriverType
		{
			get
			{
				return this._DriverType;
			}
			set
			{
				if ((this._DriverType != value))
				{
					this._DriverType = value;
				}
			}
		}
	}
	
	public partial class sp_GetOrgEventResult
	{
		
		private int _Event_ID;
		
		private int _Organization_ID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Time;
		
		private string _Location;
		
		private string _Description;
		
		private string _OrganizationWorkedWith;
		
		private string _ContactPhone;
		
		private string _ContactEmail;
		
		private System.Nullable<int> _Attendance;
		
		private System.Nullable<int> _HoursVolunteered;
		
		private System.Nullable<decimal> _DollarsSpentByOrg;
		
		private string _Title;
		
		private System.Nullable<bool> _EventType;
		
		private System.Nullable<bool> _OnOffCampus;
		
		private System.Nullable<int> _VanRental;
		
		private System.Nullable<int> _BusRental;
		
		private string _ContactName;
		
		private System.Nullable<int> _Driver1;
		
		private System.Nullable<int> _Driver2;
		
		private System.Nullable<decimal> _DollarsSpentByPartner;
		
		private int _NumberOfVolunteers;
		
		private string _CreatedByUser;
		
		private bool _RoomReserved;
		
		private bool _Marketing;
		
		private bool _Catering;
		
		private bool _SignupForm;
		
		private bool _ActivityWaiver;
		
		private bool _CUNight;
		
		private string _Driver1Name;
		
		private string _Driver2Name;
		
		public sp_GetOrgEventResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event_ID", DbType="Int NOT NULL")]
		public int Event_ID
		{
			get
			{
				return this._Event_ID;
			}
			set
			{
				if ((this._Event_ID != value))
				{
					this._Event_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL")]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					this._Organization_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(10)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this._Time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationWorkedWith", DbType="VarChar(50)")]
		public string OrganizationWorkedWith
		{
			get
			{
				return this._OrganizationWorkedWith;
			}
			set
			{
				if ((this._OrganizationWorkedWith != value))
				{
					this._OrganizationWorkedWith = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(50)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this._ContactPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="VarChar(50)")]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this._ContactEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendance", DbType="Int")]
		public System.Nullable<int> Attendance
		{
			get
			{
				return this._Attendance;
			}
			set
			{
				if ((this._Attendance != value))
				{
					this._Attendance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursVolunteered", DbType="Int")]
		public System.Nullable<int> HoursVolunteered
		{
			get
			{
				return this._HoursVolunteered;
			}
			set
			{
				if ((this._HoursVolunteered != value))
				{
					this._HoursVolunteered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarsSpentByOrg", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DollarsSpentByOrg
		{
			get
			{
				return this._DollarsSpentByOrg;
			}
			set
			{
				if ((this._DollarsSpentByOrg != value))
				{
					this._DollarsSpentByOrg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="Bit")]
		public System.Nullable<bool> EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this._EventType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnOffCampus", DbType="Bit")]
		public System.Nullable<bool> OnOffCampus
		{
			get
			{
				return this._OnOffCampus;
			}
			set
			{
				if ((this._OnOffCampus != value))
				{
					this._OnOffCampus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VanRental", DbType="Int")]
		public System.Nullable<int> VanRental
		{
			get
			{
				return this._VanRental;
			}
			set
			{
				if ((this._VanRental != value))
				{
					this._VanRental = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusRental", DbType="Int")]
		public System.Nullable<int> BusRental
		{
			get
			{
				return this._BusRental;
			}
			set
			{
				if ((this._BusRental != value))
				{
					this._BusRental = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(50)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this._ContactName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver1", DbType="Int")]
		public System.Nullable<int> Driver1
		{
			get
			{
				return this._Driver1;
			}
			set
			{
				if ((this._Driver1 != value))
				{
					this._Driver1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver2", DbType="Int")]
		public System.Nullable<int> Driver2
		{
			get
			{
				return this._Driver2;
			}
			set
			{
				if ((this._Driver2 != value))
				{
					this._Driver2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarsSpentByPartner", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DollarsSpentByPartner
		{
			get
			{
				return this._DollarsSpentByPartner;
			}
			set
			{
				if ((this._DollarsSpentByPartner != value))
				{
					this._DollarsSpentByPartner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfVolunteers", DbType="Int NOT NULL")]
		public int NumberOfVolunteers
		{
			get
			{
				return this._NumberOfVolunteers;
			}
			set
			{
				if ((this._NumberOfVolunteers != value))
				{
					this._NumberOfVolunteers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUser", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CreatedByUser
		{
			get
			{
				return this._CreatedByUser;
			}
			set
			{
				if ((this._CreatedByUser != value))
				{
					this._CreatedByUser = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomReserved", DbType="Bit NOT NULL")]
		public bool RoomReserved
		{
			get
			{
				return this._RoomReserved;
			}
			set
			{
				if ((this._RoomReserved != value))
				{
					this._RoomReserved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marketing", DbType="Bit NOT NULL")]
		public bool Marketing
		{
			get
			{
				return this._Marketing;
			}
			set
			{
				if ((this._Marketing != value))
				{
					this._Marketing = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Catering", DbType="Bit NOT NULL")]
		public bool Catering
		{
			get
			{
				return this._Catering;
			}
			set
			{
				if ((this._Catering != value))
				{
					this._Catering = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SignupForm", DbType="Bit NOT NULL")]
		public bool SignupForm
		{
			get
			{
				return this._SignupForm;
			}
			set
			{
				if ((this._SignupForm != value))
				{
					this._SignupForm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivityWaiver", DbType="Bit NOT NULL")]
		public bool ActivityWaiver
		{
			get
			{
				return this._ActivityWaiver;
			}
			set
			{
				if ((this._ActivityWaiver != value))
				{
					this._ActivityWaiver = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUNight", DbType="Bit NOT NULL")]
		public bool CUNight
		{
			get
			{
				return this._CUNight;
			}
			set
			{
				if ((this._CUNight != value))
				{
					this._CUNight = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver1Name", DbType="VarChar(41)")]
		public string Driver1Name
		{
			get
			{
				return this._Driver1Name;
			}
			set
			{
				if ((this._Driver1Name != value))
				{
					this._Driver1Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver2Name", DbType="VarChar(41)")]
		public string Driver2Name
		{
			get
			{
				return this._Driver2Name;
			}
			set
			{
				if ((this._Driver2Name != value))
				{
					this._Driver2Name = value;
				}
			}
		}
	}
	
	public partial class sp_GetCommentsByEventIDResult
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Text;
		
		private string _UserID;
		
		private string _ShortDate;
		
		private int _EventComment_ID;
		
		public sp_GetCommentsByEventIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this._Text = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDate", DbType="VarChar(10)")]
		public string ShortDate
		{
			get
			{
				return this._ShortDate;
			}
			set
			{
				if ((this._ShortDate != value))
				{
					this._ShortDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventComment_ID", DbType="Int NOT NULL")]
		public int EventComment_ID
		{
			get
			{
				return this._EventComment_ID;
			}
			set
			{
				if ((this._EventComment_ID != value))
				{
					this._EventComment_ID = value;
				}
			}
		}
	}
	
	public partial class sp_GetCommentsByServiceProjectIDResult
	{
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Text;
		
		private string _UserID;
		
		private string _ShortDate;
		
		private int _ServiceComment_ID;
		
		public sp_GetCommentsByServiceProjectIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this._Text = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(20)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDate", DbType="VarChar(10)")]
		public string ShortDate
		{
			get
			{
				return this._ShortDate;
			}
			set
			{
				if ((this._ShortDate != value))
				{
					this._ShortDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceComment_ID", DbType="Int NOT NULL")]
		public int ServiceComment_ID
		{
			get
			{
				return this._ServiceComment_ID;
			}
			set
			{
				if ((this._ServiceComment_ID != value))
				{
					this._ServiceComment_ID = value;
				}
			}
		}
	}
	
	public partial class sp_GetServiceProjectResult
	{
		
		private int _ServiceProject_ID;
		
		private int _Organization_ID;
		
		private string _CommunityPartner;
		
		private string _ContactName;
		
		private string _ContactPhone;
		
		private string _ContactEmail;
		
		private System.Nullable<int> _NoOfVolunteers;
		
		private System.Nullable<int> _HoursVolunteered;
		
		private string _Description;
		
		private System.Nullable<bool> _OnGoing;
		
		private string _Location;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private string _TimeFrom;
		
		private string _TimeTo;
		
		private string _MeetDay;
		
		private string _MeetFrequency;
		
		private string _Title;
		
		private string _Funds;
		
		private int _Planned_NoOfVolunteers;
		
		private int _Planned_HoursVolunteered;
		
		private string _Planned_Funds;
		
		public sp_GetServiceProjectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProject_ID", DbType="Int NOT NULL")]
		public int ServiceProject_ID
		{
			get
			{
				return this._ServiceProject_ID;
			}
			set
			{
				if ((this._ServiceProject_ID != value))
				{
					this._ServiceProject_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL")]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					this._Organization_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunityPartner", DbType="VarChar(150)")]
		public string CommunityPartner
		{
			get
			{
				return this._CommunityPartner;
			}
			set
			{
				if ((this._CommunityPartner != value))
				{
					this._CommunityPartner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(50)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this._ContactName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(50)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this._ContactPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="VarChar(50)")]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this._ContactEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfVolunteers", DbType="Int")]
		public System.Nullable<int> NoOfVolunteers
		{
			get
			{
				return this._NoOfVolunteers;
			}
			set
			{
				if ((this._NoOfVolunteers != value))
				{
					this._NoOfVolunteers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursVolunteered", DbType="Int")]
		public System.Nullable<int> HoursVolunteered
		{
			get
			{
				return this._HoursVolunteered;
			}
			set
			{
				if ((this._HoursVolunteered != value))
				{
					this._HoursVolunteered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnGoing", DbType="Bit")]
		public System.Nullable<bool> OnGoing
		{
			get
			{
				return this._OnGoing;
			}
			set
			{
				if ((this._OnGoing != value))
				{
					this._OnGoing = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this._EndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeFrom", DbType="VarChar(10)")]
		public string TimeFrom
		{
			get
			{
				return this._TimeFrom;
			}
			set
			{
				if ((this._TimeFrom != value))
				{
					this._TimeFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTo", DbType="VarChar(10)")]
		public string TimeTo
		{
			get
			{
				return this._TimeTo;
			}
			set
			{
				if ((this._TimeTo != value))
				{
					this._TimeTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetDay", DbType="VarChar(20)")]
		public string MeetDay
		{
			get
			{
				return this._MeetDay;
			}
			set
			{
				if ((this._MeetDay != value))
				{
					this._MeetDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetFrequency", DbType="VarChar(150)")]
		public string MeetFrequency
		{
			get
			{
				return this._MeetFrequency;
			}
			set
			{
				if ((this._MeetFrequency != value))
				{
					this._MeetFrequency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Funds", DbType="VarChar(250)")]
		public string Funds
		{
			get
			{
				return this._Funds;
			}
			set
			{
				if ((this._Funds != value))
				{
					this._Funds = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Planned_NoOfVolunteers", DbType="Int NOT NULL")]
		public int Planned_NoOfVolunteers
		{
			get
			{
				return this._Planned_NoOfVolunteers;
			}
			set
			{
				if ((this._Planned_NoOfVolunteers != value))
				{
					this._Planned_NoOfVolunteers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Planned_HoursVolunteered", DbType="Int NOT NULL")]
		public int Planned_HoursVolunteered
		{
			get
			{
				return this._Planned_HoursVolunteered;
			}
			set
			{
				if ((this._Planned_HoursVolunteered != value))
				{
					this._Planned_HoursVolunteered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Planned_Funds", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Planned_Funds
		{
			get
			{
				return this._Planned_Funds;
			}
			set
			{
				if ((this._Planned_Funds != value))
				{
					this._Planned_Funds = value;
				}
			}
		}
	}
	
	public partial class sp_GetMyOrgsServiceListResult
	{
		
		private int _ServiceProject_ID;
		
		private int _Organization_ID;
		
		private string _StartDate;
		
		private System.Nullable<bool> _OnGoing;
		
		private string _Location;
		
		private string _Title;
		
		private System.Nullable<int> _HoursVolunteered;
		
		private string _CommunityPartner;
		
		private int _Planned_HoursVolunteered;
		
		public sp_GetMyOrgsServiceListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProject_ID", DbType="Int NOT NULL")]
		public int ServiceProject_ID
		{
			get
			{
				return this._ServiceProject_ID;
			}
			set
			{
				if ((this._ServiceProject_ID != value))
				{
					this._ServiceProject_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL")]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					this._Organization_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="VarChar(10)")]
		public string StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this._StartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnGoing", DbType="Bit")]
		public System.Nullable<bool> OnGoing
		{
			get
			{
				return this._OnGoing;
			}
			set
			{
				if ((this._OnGoing != value))
				{
					this._OnGoing = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursVolunteered", DbType="Int")]
		public System.Nullable<int> HoursVolunteered
		{
			get
			{
				return this._HoursVolunteered;
			}
			set
			{
				if ((this._HoursVolunteered != value))
				{
					this._HoursVolunteered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunityPartner", DbType="VarChar(150)")]
		public string CommunityPartner
		{
			get
			{
				return this._CommunityPartner;
			}
			set
			{
				if ((this._CommunityPartner != value))
				{
					this._CommunityPartner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Planned_HoursVolunteered", DbType="Int NOT NULL")]
		public int Planned_HoursVolunteered
		{
			get
			{
				return this._Planned_HoursVolunteered;
			}
			set
			{
				if ((this._Planned_HoursVolunteered != value))
				{
					this._Planned_HoursVolunteered = value;
				}
			}
		}
	}
	
	public partial class sp_GetOrgFilesResult
	{
		
		private int _file_number;
		
		private string _name_of_file;
		
		private string _description_of_file;
		
		private System.Nullable<System.DateTime> _upload_date;
		
		private string _uploaded_by;
		
		public sp_GetOrgFilesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_file_number", DbType="Int NOT NULL")]
		public int file_number
		{
			get
			{
				return this._file_number;
			}
			set
			{
				if ((this._file_number != value))
				{
					this._file_number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_of_file", DbType="VarChar(250)")]
		public string name_of_file
		{
			get
			{
				return this._name_of_file;
			}
			set
			{
				if ((this._name_of_file != value))
				{
					this._name_of_file = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description_of_file", DbType="VarChar(MAX)")]
		public string description_of_file
		{
			get
			{
				return this._description_of_file;
			}
			set
			{
				if ((this._description_of_file != value))
				{
					this._description_of_file = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upload_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> upload_date
		{
			get
			{
				return this._upload_date;
			}
			set
			{
				if ((this._upload_date != value))
				{
					this._upload_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uploaded_by", DbType="VarChar(20)")]
		public string uploaded_by
		{
			get
			{
				return this._uploaded_by;
			}
			set
			{
				if ((this._uploaded_by != value))
				{
					this._uploaded_by = value;
				}
			}
		}
	}
	
	public partial class sp_GetMyOrgs_OrgByIDResult
	{
		
		private string _OrganizationName;
		
		private string _Description;
		
		private string _MeetingTime;
		
		private string _MeetingDay;
		
		private string _MeetingBuilding;
		
		private string _MeetingRoom;
		
		private string _MeetingFrequency;
		
		private int _Category_ID;
		
		private string _OAccount;
		
		private string _ProjectCode;
		
		private string _AdvisorName;
		
		private System.Nullable<bool> _GreekOrg;
		
		public sp_GetMyOrgs_OrgByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="VarChar(100)")]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this._OrganizationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingTime", DbType="VarChar(20)")]
		public string MeetingTime
		{
			get
			{
				return this._MeetingTime;
			}
			set
			{
				if ((this._MeetingTime != value))
				{
					this._MeetingTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingDay", DbType="VarChar(20)")]
		public string MeetingDay
		{
			get
			{
				return this._MeetingDay;
			}
			set
			{
				if ((this._MeetingDay != value))
				{
					this._MeetingDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingBuilding", DbType="VarChar(20)")]
		public string MeetingBuilding
		{
			get
			{
				return this._MeetingBuilding;
			}
			set
			{
				if ((this._MeetingBuilding != value))
				{
					this._MeetingBuilding = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingRoom", DbType="VarChar(20)")]
		public string MeetingRoom
		{
			get
			{
				return this._MeetingRoom;
			}
			set
			{
				if ((this._MeetingRoom != value))
				{
					this._MeetingRoom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeetingFrequency", DbType="VarChar(150)")]
		public string MeetingFrequency
		{
			get
			{
				return this._MeetingFrequency;
			}
			set
			{
				if ((this._MeetingFrequency != value))
				{
					this._MeetingFrequency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_ID", DbType="Int NOT NULL")]
		public int Category_ID
		{
			get
			{
				return this._Category_ID;
			}
			set
			{
				if ((this._Category_ID != value))
				{
					this._Category_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OAccount", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string OAccount
		{
			get
			{
				return this._OAccount;
			}
			set
			{
				if ((this._OAccount != value))
				{
					this._OAccount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCode", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string ProjectCode
		{
			get
			{
				return this._ProjectCode;
			}
			set
			{
				if ((this._ProjectCode != value))
				{
					this._ProjectCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvisorName", DbType="VarChar(60)")]
		public string AdvisorName
		{
			get
			{
				return this._AdvisorName;
			}
			set
			{
				if ((this._AdvisorName != value))
				{
					this._AdvisorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GreekOrg", DbType="Bit")]
		public System.Nullable<bool> GreekOrg
		{
			get
			{
				return this._GreekOrg;
			}
			set
			{
				if ((this._GreekOrg != value))
				{
					this._GreekOrg = value;
				}
			}
		}
	}
	
	public partial class sp_GetMyOrgsRosterResult
	{
		
		private int _Organization_ID;
		
		private int _Student_ID;
		
		private int _Carroll_ID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _MemberName;
		
		private int _Member_ID;
		
		private string _sort_order;
		
		public sp_GetMyOrgsRosterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organization_ID", DbType="Int NOT NULL")]
		public int Organization_ID
		{
			get
			{
				return this._Organization_ID;
			}
			set
			{
				if ((this._Organization_ID != value))
				{
					this._Organization_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="Int NOT NULL")]
		public int Student_ID
		{
			get
			{
				return this._Student_ID;
			}
			set
			{
				if ((this._Student_ID != value))
				{
					this._Student_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carroll_ID", DbType="Int NOT NULL")]
		public int Carroll_ID
		{
			get
			{
				return this._Carroll_ID;
			}
			set
			{
				if ((this._Carroll_ID != value))
				{
					this._Carroll_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this._MemberName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Member_ID", DbType="Int NOT NULL")]
		public int Member_ID
		{
			get
			{
				return this._Member_ID;
			}
			set
			{
				if ((this._Member_ID != value))
				{
					this._Member_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort_order", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string sort_order
		{
			get
			{
				return this._sort_order;
			}
			set
			{
				if ((this._sort_order != value))
				{
					this._sort_order = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
